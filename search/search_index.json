{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cours de Premi\u00e8re NSI","text":""},{"location":"#programme-du-cours","title":"Programme du cours","text":"<ol> <li>Constructions \u00e9l\u00e9mentaires</li> <li>Bool\u00e9ens</li> <li>Fonctions</li> <li>Cha\u00eenes de caract\u00e8res</li> <li>Tableaux</li> <li>p-uplets et dictionnaires</li> <li>Tables de donn\u00e9es</li> <li>Flottants</li> <li>Algorithmes classiques</li> </ol>"},{"location":"#logiciels-a-installer","title":"Logiciels \u00e0 installer","text":"<p>Installation d'Anaconda</p> <p>La suite Anaconda, t\u00e9l\u00e9chargeable ici, contient l'\u00e9diteur de carnets Jupyter et l'\u00e9diteur de code Spyder.</p> <p></p>"},{"location":"algos_classiques/","title":"Chapitre 9 : Algorithmes classiques","text":"<p>Cours et exercices \u00e0 t\u00e9l\u00e9charger ici.</p> <p>Page en construction...</p>"},{"location":"booleens/","title":"Chapitre 2 : Bool\u00e9ens","text":""},{"location":"booleens/#partie-a-valeurs-variables-et-expressions-booleennes","title":"Partie A - Valeurs, variables et expressions bool\u00e9ennes","text":""},{"location":"booleens/#definitions-et-premiers-exemples","title":"D\u00e9finitions et premiers exemples","text":"<p>Il existe deux valeurs bool\u00e9ennes, qui sont <code>Vrai</code> (en Python, <code>True</code> ou <code>1</code>) et <code>Faux</code> (en Python, <code>False</code> ou <code>0</code>).</p> <p>Une variable bool\u00e9enne est une variable dont la valeur est bool\u00e9enne et une expression bool\u00e9enne est une expression dont la valeur est bool\u00e9enne.</p> <p>Les expressions bool\u00e9ennes apparaissent dans la d\u00e9finition des instructions conditionnelles (<code>if expression_booleenne:</code>) et des boucles non born\u00e9es (<code>while expression_booleenne:</code>).</p> Exercice 2-01 : Variables et expressions bool\u00e9ennes <p>Objectif : Rep\u00e9rer les variables bool\u00e9ennes et les expressions bool\u00e9ennes dans un code.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> Activit\u00e9 2-02 : Conjecture de Syracuse <p>Objectifs :</p> <ul> <li>Retravailler les instructions conditionnelles et les boucles.</li> <li>Utiliser des expressions bool\u00e9ennes pour \u00e9tudier un probl\u00e8me math\u00e9matique c\u00e9l\u00e8bre.</li> </ul> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"booleens/#partie-b-operateurs-logiques-et-tables-de-verite","title":"Partie B - Op\u00e9rateurs logiques et tables de v\u00e9rit\u00e9","text":""},{"location":"booleens/#operateurs-logiques-non-et-ou-xor","title":"Op\u00e9rateurs logiques non, et, ou, xor","text":"<p>Nous avons vu comment utiliser des expressions bool\u00e9ennes simples telles que <code>n == 0</code>, <code>s != 1</code>, <code>-1 &lt;= n &lt;= 2</code> ou encore <code>s % 2 == 0</code>.</p> <p>Mais il est parfois n\u00e9cessaire d'\u00e9crire des expressions bool\u00e9ennes plus complexes, compos\u00e9es de plusieurs expressions bool\u00e9ennes reli\u00e9es entre elles pas des op\u00e9rateurs logiques. Nous utiliserons quatre op\u00e9rateurs en particulier : la n\u00e9gation (op\u00e9rateur non), la conjonction (op\u00e9rateur et), la disjonction inclusive (op\u00e9rateur ou) et la disjonction exclusive (op\u00e9rateur xor encore appel\u00e9 ou exclusif).</p> Op\u00e9rateur Nom commun Mot cl\u00e9 Python N\u00e9gation non <code>not</code> Conjonction et <code>and</code> Disjonction inclusive ou (ou inclusif) <code>or</code> Disjonction exclusive xor (ou exclusif) <code>^</code>"},{"location":"booleens/#tables-de-verite","title":"Tables de v\u00e9rit\u00e9","text":"<p>Une table de v\u00e9rit\u00e9 est un tableau dans lequel apparait la valeur d'une expression bool\u00e9enne en fonction des valeurs prises par les variables bool\u00e9ennes contenues dans l'expression.</p> <p>On donne ci-dessous la table de v\u00e9rit\u00e9 des expressions <code>not A</code>, <code>A and B</code>, <code>A or B</code>, <code>A ^ B</code>.</p> <p>Table de v\u00e9rit\u00e9 des op\u00e9rateurs <code>non</code>, <code>et</code>, <code>ou</code> et <code>xor</code></p> nonetouxor, ou exclusif <p></p> <p></p> <p></p> <p></p> Exercice 2-03 : Table de v\u00e9rit\u00e9 d'expressions bool\u00e9ennes <p>Objectif : Dresser la table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne d\u00e9pendant de deux ou trois variables bool\u00e9ennes.</p> <p>\u00c9nonc\u00e9</p> <p>1. <code>a</code> et <code>b</code> \u00e9tant deux variables bool\u00e9ennes, dresser la table de v\u00e9rit\u00e9 de l'expression <code>(not a) or (a and b)</code>.</p> <p>2. <code>a</code>, <code>b</code> et <code>c</code> \u00e9tant trois variables bool\u00e9ennes, dresser la table de v\u00e9rit\u00e9 de l'expression <code>(a or c) and (b or (not c))</code>.</p> Activit\u00e9 2-04 : Circuits logiques <p>Objectif : Comprendre comment un circuit logique peut repr\u00e9senter une expression bool\u00e9enne.</p> <p>\u00c9nonc\u00e9</p> <p>Un circuit logique est un dispositif \u00e9lectronique qui permet de r\u00e9aliser des op\u00e9rations bool\u00e9ennes en combinant des entr\u00e9es, des sorties et des portes logiques (li\u00e9es aux op\u00e9rateurs bool\u00e9ens). </p> <p>Un point donn\u00e9 du circuit ne peut avoir que deux \u00e9tats : <code>1</code> (correspondant \u00e0 un niveau haut de tension \u00e9lectrique) ou <code>0</code> (correspondant \u00e0 un niveau bas de tension \u00e9lectrique).</p> <p>L'utilisation d'un interrupteur en entr\u00e9e permet de passer d'un \u00e9tat \u00e0 l'autre et donc de mat\u00e9rialiser une variable bool\u00e9enne. L'utilisation d'une lampe en sortie permet de visualiser l'\u00e9tat.</p> <p>1. Identifier, dans chaque cas, quelle est l'entr\u00e9e et quelle est la sortie du circuit logique suivant :</p> <p></p> <p>On donne maintenant le circuit logique suivant dans lequel apparaissent quatre portes logiques reli\u00e9es chacune \u00e0 une lampe. On a utilis\u00e9 deux interrupteurs pour mat\u00e9rialiser deux variables bool\u00e9ennes en entr\u00e9e.</p> <p></p> <p>2. Simuler le fonctionnement de ce circuit sur le site Logic gate simulator en chargeant le fichier <code>portes_logiques.json</code> t\u00e9l\u00e9chargeable ici.</p> <p>3. En d\u00e9duire quelle porte logique est associ\u00e9e \u00e0 quel op\u00e9rateur bool\u00e9en.</p> <p>4. D\u00e9terminer une expression bool\u00e9enne correspondant \u00e0 la sortie du circuit logique ci-dessous. On appelle <code>a</code> la variable bool\u00e9enne associ\u00e9e \u00e0 l'interrupteur du bas et <code>b</code> celle associ\u00e9e \u00e0 l'interrupteur du haut.</p> <p></p> <p>5. Cr\u00e9er, sur le site Logic gate simulator, un circuit correspondant \u00e0 l'expression bool\u00e9enne <code>(a ^ b) or (not a and not b)</code>.</p> <p>6. Sur le m\u00eame sch\u00e9ma, ajouter un second circuit correspondant \u00e0 l'expression bool\u00e9enne <code>not (a and b)</code>.</p>"},{"location":"booleens/#partie-c-exercices-et-activites","title":"Partie C - Exercices et activit\u00e9s","text":"Exercices 2-05 \u00e0 2-07 Exercice 2-05 : Identification d'un coupableExercice 2-06 : Table de v\u00e9rit\u00e9 et circuit logiqueExercice 2-07 : Simplification d'expressions bool\u00e9ennes <p>\u00c9nonc\u00e9</p> <p>Un vol de bijoux a \u00e9t\u00e9 commis et quatre hommes sont suspects. Un seul est coupable, un deuxi\u00e8me est son complice et les deux autres sont innocents.</p> <p>Voici le signalement des quatre suspects :</p> Nom du suspect Moustache Lunettes Cicatrice Boucle d'oreilles Donatello oui oui non non Leonardo oui non non oui Michelangelo non non oui oui Raffaello non oui oui non <p>Lors de leur interrogatoire, les suspects d\u00e9clarent :</p> <ul> <li>Donatello : \"Le coupable a une cicatrice ou une boucle d'oreille mais pas les deux !\"</li> <li>Leonardo : \"Le coupable a des lunettes !\"</li> <li>Michelangelo : \"Le coupable a une moustache ou des lunettes mais pas les deux !\"</li> <li>Raffaello : \"Le coupable n'a pas de cicatrice !\"</li> </ul> <p>Sachant que le coupable et son complice mentent et que les deux innocents disent la v\u00e9rit\u00e9, d\u00e9terminer qui est le coupable et qui est son complice.</p> Corrig\u00e9 <p>Le tableau ci-dessous indique, pour chaque coupable potentiel, quels suspects disent la v\u00e9rit\u00e9 ou mentent.</p> Nom du coupable potentiel T\u00e9moignage de Donatello T\u00e9moignage de Leonardo T\u00e9moignage de Michelangelo T\u00e9moignage de Raffaello Nombre de menteurs Donatello mensonge v\u00e9rit\u00e9 mensonge v\u00e9rit\u00e9 2 Leonardo v\u00e9rit\u00e9 mensonge v\u00e9rit\u00e9 v\u00e9rit\u00e9 1 Michelangelo mensonge mensonge mensonge mensonge 4 Raffaello v\u00e9rit\u00e9 v\u00e9rit\u00e9 v\u00e9rit\u00e9 mensonge 1 <p>La seule situation o\u00f9 il y a exactement deux menteurs est celle o\u00f9 Donatello est le coupable. Son complice est donc le second menteur, Michelangelo.</p> <p>\u00c9nonc\u00e9</p> <p>1. <code>a</code> et <code>b</code> et <code>c</code> \u00e9tant trois variables bool\u00e9ennes, dresser la table de v\u00e9rit\u00e9 de l'expression <code>(a ^ b) and (not a or c)</code>.</p> <p>2. Repr\u00e9senter l'expression de la question pr\u00e9c\u00e9dente sous forme de circuit logique sur le site Logic gate simulator.</p> <p>\u00c9nonc\u00e9</p> <p>Soient <code>a</code>, <code>b</code> et <code>c</code> trois variables bool\u00e9ennes.</p> <p>1. D\u00e9terminer une forme simplifi\u00e9e de l'expression bool\u00e9enne <code>a or (not a and b)</code>.</p> <p>2. M\u00eame question pour l'expression bool\u00e9enne <code>(a or b) and (a or not b)</code>.</p> <p>3. M\u00eame question pour l'expression bool\u00e9enne <code>(not a or b) and (a or b or c) and not c</code>.</p> Activit\u00e9s 2-08 \u00e0 2-10 Activit\u00e9 2-08 : Jeu de rapidit\u00e9 Boolean GameActivit\u00e9 2-09 : Additionneur 4 bitsActivit\u00e9 2-10 : Afficheur 7 segments <p>Objectif : S'entra\u00eener \u00e0 manipuler les op\u00e9rateurs logiques.</p> <p>Boolean Game</p> <p>Pouvez-vous d\u00e9passer les 40 points au jeu Boolean Game ?</p> <p>Objectifs :</p> <ul> <li>Comprendre le fonctionnement d'un circuit logique donn\u00e9.</li> <li>Comprendre comment un circuit logique permet d'additionner deux entiers.</li> </ul> <p>\u00c9nonc\u00e9</p> <p>1. Dresser la table de v\u00e9rit\u00e9 du demi-additionneur repr\u00e9sent\u00e9 ci-dessous, en indiquant la valeur des deux sorties en fonction de la valeur des deux entr\u00e9es.</p> <p>Il est possible de simuler le comportement du demi-additionneur sur le site Logic gate simulator en chargeant le fichier <code>demi_additionneur.json</code> t\u00e9l\u00e9chargeable ici.</p> <p></p> <p>2. En d\u00e9duire une justification du fait que le demi-additionneur permet d'additionner deux bits.</p> <p>3. Expliquer en quoi le circuit ci-dessous, appel\u00e9 additionneur complet, permet d'additionner trois bits.</p> <p>Il est possible de simuler le comportement de l'additionneur complet sur le site Logic gate simulator en chargeant le fichier <code>additionneur_complet.json</code> t\u00e9l\u00e9chargeable ici.</p> <p></p> <p>4. Sur le sch\u00e9ma de l'additionneur 4 bits ci-dessous, identifier :</p> <ul> <li>les deux entr\u00e9es compos\u00e9es de quatre bits chacune,</li> <li>les deux sorties : la premi\u00e8re compos\u00e9e de quatre bits, la seconde d'un bit unique (retenue),</li> <li>les quatre additionneurs complets utilis\u00e9s,</li> <li>les quatre retenues obtenues au cours du calcul.</li> </ul> <p></p> <p>5. Repr\u00e9senter en rouge les liaisons par lesquelles le courant passe lorsqu'on effectue l'addition <code>6 + 5</code>.</p> <p>6. M\u00eame question pour l'addition <code>12 + 5</code>.</p> <p>Objectifs :</p> <ul> <li>D\u00e9terminer des expressions bool\u00e9ennes \u00e0 partir de tables de v\u00e9rit\u00e9.</li> <li>Repr\u00e9senter des expressions bool\u00e9ennes sous forme de circuits logiques.</li> <li>Comprendre comment afficher un chiffre hexad\u00e9cimal sur un afficheur 7 segments.</li> </ul> <p>\u00c9nonc\u00e9</p> <p>Un afficheur 7 segments permet d'afficher un chiffre en activant ou d\u00e9sactivant chacun des sept segments qui le composent.</p> <p>Premi\u00e8re partie : cas des chiffres de 0 et 1</p> <p></p> <p>Les deux chiffres <code>0</code> et <code>1</code> se repr\u00e9sentent sur un seul bit, qu'on peut associer \u00e0 une variable bool\u00e9enne <code>a</code>.</p> <p><code>a</code> vaut <code>False</code> pour le chiffre <code>0</code>. <code>a</code> vaut <code>True</code> pour le chiffre <code>1</code>.</p> <p>1. D\u00e9terminer, en fonction de la valeur de <code>a</code>, si chacun des sept segments de l'afficheur doit \u00eatre activ\u00e9 ou pas.</p> <p>On peut cr\u00e9er un circuit logique qui illustre les sept expressions bool\u00e9ennes trouv\u00e9es \u00e0 la question pr\u00e9c\u00e9dente.</p> <p></p> <p>2. Simuler le comportement de ce circuit sur le site Logic gate simulator en chargeant le fichier <code>afficheur_1bit.json</code> t\u00e9l\u00e9chargeable ici.</p> <p>Deuxi\u00e8me partie : cas des chiffres de 0 \u00e0 3</p> <p></p> <p>Les quatre chiffres de <code>0</code> \u00e0 <code>3</code> se repr\u00e9sentent sur deux bits, qu'on peut associer \u00e0 deux variables bool\u00e9ennes : <code>a</code> pour le bit de poids fort et <code>b</code> pour le bit de poids faible.</p> <p>3. D\u00e9terminer, en fonction des valeurs de <code>a</code> et <code>b</code>, si chacun des sept segments de l'afficheur doit \u00eatre activ\u00e9 ou pas.</p> <p>On peut cr\u00e9er un circuit logique qui illustre les sept expressions bool\u00e9ennes trouv\u00e9es \u00e0 la question pr\u00e9c\u00e9dente.</p> <p></p> <p>4. Compl\u00e9ter ce circuit puis simuler son comportement sur le site Logic gate simulator apr\u00e8s avoir charg\u00e9 le fichier <code>afficheur_2bits_vierge.json</code> t\u00e9l\u00e9chargeable ici.</p> <p>Troisi\u00e8me partie : cas des seize chiffres hexad\u00e9cimaux</p> <p></p> <p>Les seize chiffres hexad\u00e9cimaux se repr\u00e9sentent sur quatre bits, qu'on peut associer \u00e0 quatre variables bool\u00e9ennes <code>a</code>, <code>b</code>, <code>c</code> et <code>d</code> : <code>a</code> pour le bit de poids le plus fort et <code>d</code> pour le bit de poids le plus faible.</p> <p>5. Apr\u00e8s avoir dress\u00e9 la table de v\u00e9rit\u00e9 de l'expression bool\u00e9enne <code>(a and d) or (c and (a or not b or not d)) or ((a ^ b) and not c)</code>, justifier que cette expression permet l'activation du segment central pour l'affichage des seize chiffres hexad\u00e9cimaux.</p> <p>6. D\u00e9terminer une expression bool\u00e9enne (en fonction des variables <code>a</code>, <code>b</code>, <code>c</code> et <code>d</code>) permettant l'activation du segment situ\u00e9 en bas \u00e0 gauche pour l'affichage des seize chiffres hexad\u00e9cimaux.</p>"},{"location":"booleens/#ce-quil-faut-savoir-et-savoir-faire","title":"Ce qu'il faut savoir et savoir faire","text":"<ul> <li>Rep\u00e9rer variables bool\u00e9ennes et expressions bool\u00e9ennes dans un algorithme ou un programme.</li> <li>\u00c9crire une expression bool\u00e9enne complexe en utilisant les op\u00e9rateurs <code>non</code>, <code>et</code>, <code>ou</code>, <code>xor</code>.</li> <li>Donner la table de v\u00e9rit\u00e9 des op\u00e9rateurs <code>non</code>, <code>et</code>, <code>ou</code>, <code>xor</code>.</li> <li>Donner la table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne complexe contenant des variables bool\u00e9ennes.</li> <li>Faire le lien entre une expression bool\u00e9enne complexe contenant des variables bool\u00e9ennes et un circuit de portes logiques.</li> <li>Utiliser les op\u00e9rateurs <code>//</code> (quotient de la division euclidienne), <code>%</code> (reste de la division euclidienne) et <code>**</code> (puissance).</li> <li>Mesurer le temps moyen d'ex\u00e9cution d'une cellule de carnet Jupyter \u00e0 l'aide de l'outil Time it.</li> </ul>"},{"location":"chaines/","title":"Chapitre 4 : Cha\u00eenes de caract\u00e8res","text":""},{"location":"chaines/#partie-a-representation-dun-texte-en-machine","title":"Partie A - Repr\u00e9sentation d'un texte en machine","text":"<p>Pour stocker un texte dans la m\u00e9moire d'un ordinateur, pour transmettre un texte \u00e0 une imprimante, pour envoyer un email, etc., il est n\u00e9cessaire de pouvoir encoder ce texte sous forme de bits, en associant \u00e0 chaque caract\u00e8re du texte une s\u00e9quence de bits.</p> <p>Plusieurs difficult\u00e9s apparaissent. Il faut que les diff\u00e9rentes machines qui doivent manipuler le texte utilisent le m\u00eame encodage. Cet encodage doit permettre de repr\u00e9senter le plus grand nombre de caract\u00e8res diff\u00e9rents possible, dont un certain nombre de caract\u00e8res non imprimables qui permettent de signaler le d\u00e9but et la fin du texte, une nouvelle ligne, une tabulation, etc.. Enfin, il faut prendre garde que l'encodage ne n\u00e9cessite pas un trop grand nombre de bits pour chaque caract\u00e8re, faute de quoi le stockage en m\u00e9moire pourrait \u00eatre peu optimal.</p>"},{"location":"chaines/#encodage-ascii","title":"Encodage ASCII","text":"<p>Dans les ann\u00e9es 60 est apparue la norme ASCII (American Standard Code for Information Interchange ou code am\u00e9ricain normalis\u00e9 pour l'\u00e9change d'information) qui permet d'encoder 128 caract\u00e8res sur 7 bits chacun :</p> <ul> <li>34 caract\u00e8res non imprimables (dont l'espace), cod\u00e9s de <code>0</code> \u00e0 <code>32</code> et <code>127</code>,</li> <li>10 chiffres indo-arabes, cod\u00e9s de <code>48</code> \u00e0 <code>57</code>,</li> <li>26 lettres latines majuscules, cod\u00e9es de <code>65</code> \u00e0 <code>90</code>,</li> <li>26 lettres latines minuscules, cod\u00e9es de <code>97</code> \u00e0 <code>122</code>,</li> <li>32 autres signes (ponctuation, symboles math\u00e9matiques, etc.), cod\u00e9s de <code>33</code> \u00e0 <code>47</code>, de <code>58</code> \u00e0 <code>64</code>, de <code>91</code> \u00e0 <code>96</code> et de <code>123</code> \u00e0 <code>126</code>.</li> </ul> <p>Si <code>n</code> est un entier compris entre 33 et 126, alors l'expression <code>chr(n)</code> correspond au caract\u00e8re associ\u00e9 \u00e0 <code>n</code> dans l'encodage ASCII.</p> <p>Si <code>c</code> est un caract\u00e8re ASCII, alors l'expression <code>ord(c)</code> correspond \u00e0 l'entier associ\u00e9 au caract\u00e8re <code>c</code>.</p> Exercice 4-01 : Utilisation des fonctions <code>chr</code> et <code>ord</code> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Voici la table ASCII compl\u00e8te :</p> <p></p> <p>La norme ASCII permet d'\u00e9crire du texte en anglais, mais pas dans la tr\u00e8s grande majorit\u00e9 des autres langues puisque seuls les caract\u00e8res latins non accentu\u00e9s sont disponibles.</p>"},{"location":"chaines/#encodages-iso-8859","title":"Encodages ISO 8859","text":"<p>L'Organisation Internationale de Normalisation (ISO) a propos\u00e9 seize extensions de la norme ASCII permettant de repr\u00e9senter 256 caract\u00e8res sur 8 bits chacun : c'est la norme ISO 8859.</p> <p>Les 128 premiers caract\u00e8res sont les m\u00eames que la norme ASCII. Les 128 derniers caract\u00e8res d\u00e9pendent de l'extension utilis\u00e9e. En particulier, l'encodage latin-1 (ISO 8859-1) permet d'\u00e9crire la plupart des langues d'Europe occidentale dont le fran\u00e7ais. D'autres encodages permettent d'\u00e9crire l'alphabet cyrillique (ISO 8859-5), arabe (ISO 8859-6), grec (ISO 8859-7), h\u00e9breu (ISO 8859-8), turc (ISO 8859-9).</p> <p>Si <code>n</code> est un entier compris entre 161 et 255, alors l'expression <code>chr(n)</code> correspond au caract\u00e8re associ\u00e9 \u00e0 <code>n</code> dans l'encodage latin-1.</p> <p>Si <code>c</code> est un caract\u00e8re latin-1, alors l'expression <code>ord(c)</code> correspond \u00e0 l'entier associ\u00e9 au caract\u00e8re <code>c</code>.</p> Exercice 4-02 : Encodage latin-1 <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"chaines/#encodage-unicode-utf-8","title":"Encodage Unicode (UTF-8)","text":"<p>L'encodage ISO 8859 permet d'\u00e9crire des textes dans plusieurs langues, mais pas d'\u00e9crire un texte compos\u00e9 d'un m\u00e9lange de caract\u00e8res de plusieurs langues. C'est pourquoi l'ISO a mis au point un jeu de caract\u00e8res universel (Universal Character Set) comprenant actuellement plus de 130 000 caract\u00e8res cod\u00e9s sur 21 bits, et qui pourrait th\u00e9oriquement en accueillir plus de quatre millions cod\u00e9s sur 32 bits. Les 256 premiers de ces caract\u00e8res sont les m\u00eames que ceux de la norme latin-1.</p> <p>Cependant, l'utilisation de trois \u00e0 quatre octets pour coder chaque caract\u00e8re est tr\u00e8s peu optimale puisque les caract\u00e8res latins accentu\u00e9s sont tous cod\u00e9s entre 0 et 255 (1 octet) et les autres caract\u00e8res les plus utilis\u00e9s dans le monde sont cod\u00e9s entre 0 et 65 535 (2 octets).</p> <p>La norme Unicode a \u00e9t\u00e9 mise au point pour rem\u00e9dier \u00e0 ce probl\u00e8me. L'encodage UTF-8 (Universal Transformation Format 8 bits) permet ainsi que chaque caract\u00e8re soit cod\u00e9 sur le moins d'octets possible, entre 1 et 4.</p> <p>Par d\u00e9faut, Python encode les cha\u00eenes de caract\u00e8res en UTF-8.</p> <p>Les fonctions <code>chr</code> et <code>ord</code> vues pr\u00e9c\u00e9demment permettent en r\u00e9alit\u00e9 d'associer un caract\u00e8re et un code dans l'encodage UTF-8.</p> Exercice 4-03 : Codes Unicode <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"chaines/#partie-b-operations-sur-les-chaines-de-caracteres","title":"Partie B - Op\u00e9rations sur les cha\u00eenes de caract\u00e8res","text":"<p>Une cha\u00eene de caract\u00e8res vide se note <code>''</code> ou <code>\"\"</code>.</p> <p>La fonction <code>len</code> renvoie la longueur de la cha\u00eene, c'est-\u00e0-dire son nombre de caract\u00e8res.</p> <p>Le caract\u00e8re num\u00e9ro <code>k</code> de <code>chaine</code> s'obtient via l'expression <code>chaine[k]</code>, sachant que les caract\u00e8res sont num\u00e9rot\u00e9s \u00e0 partir de <code>0</code>.</p> <p>Les expressions <code>chaine.upper()</code> et <code>chaine.lower()</code> renvoie la cha\u00eene en majuscules et en minuscules respectivement.</p> <p>La concat\u00e9nation de deux cha\u00eenes consiste \u00e0 les mettre bout \u00e0 bout, en utilisant l'op\u00e9rateur <code>+</code>.</p> <p>L'op\u00e9rateur <code>*</code> permet de concat\u00e9ner une cha\u00eene \u00e0 elle m\u00eame plusieurs fois de suite.</p> Activit\u00e9 4-04 : Op\u00e9rations sur les cha\u00eenes de caract\u00e8res <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> Exercice 4-05 : Chiffrement de C\u00e9sar <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"chaines/#partie-c-lecture-et-ecriture-dans-un-fichier","title":"Partie C - Lecture et \u00e9criture dans un fichier","text":"Activit\u00e9 4-06 : Lecture et \u00e9criture dans un fichier <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> Exercice 4-07 : Conversion d'encodage <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p>"},{"location":"chaines/#partie-d-exercices-et-activites","title":"Partie D - Exercices et activit\u00e9s","text":"Exercices 4-08 \u00e0 4-12 Exercice 4-08 : Comptage d'un caract\u00e8reExercice 4-09 : Nombre de voyellesExercice 4-10 : MandalaExercice 4-11 : Fonction <code>ascii</code>Exercice 4-12 : Pangramme <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> Activit\u00e9s 4-13 \u00e0 4-16 Activit\u00e9 4-13 : LabyrintheActivit\u00e9 4-14 : Page HTMLActivit\u00e9 4-15 : Sonnets de QueneauActivit\u00e9 4-16 : Pok\u00e9dex <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"chaines/#ce-quil-faut-savoir-et-savoir-faire","title":"Ce qu'il faut savoir et savoir faire","text":"<ul> <li>Conna\u00eetre quelques caract\u00e9ristiques des encodages ASCII, ISO 8859 et Unicode.</li> <li>Parcourir les caract\u00e8res d'une cha\u00eene avec une boucle du type <code>for lettre in chaine:</code>.</li> <li>Concat\u00e9ner plusieurs cha\u00eenes de caract\u00e8res.</li> <li>\u00c9crire une cha\u00eene de caract\u00e8res format\u00e9e (f-string).</li> <li>Ouvrir un fichier en lecture ou en \u00e9criture, en pr\u00e9cisant l'encodage appropri\u00e9.</li> <li>Lire le contenu d'un fichier texte, en int\u00e9gralit\u00e9 ou ligne par ligne.</li> <li>\u00c9crire dans un fichier texte, en \u00e9crasant ou non le contenu pr\u00e9existant.</li> <li>Modifier la norme d'encodage un fichier texte.</li> <li>Utiliser les fonctions <code>chr</code> et <code>ord</code>.</li> <li>D\u00e9terminer le nombre de caract\u00e8res d'une cha\u00eene avec la fonction <code>len</code>.</li> <li>Acc\u00e9der au <code>k</code>\u00e8me caract\u00e8re d'une cha\u00eene avec l'expression <code>chaine[k]</code>.</li> <li>Utiliser les instructions <code>upper()</code> et <code>lower()</code> pour mettre tous les caract\u00e8res d'une cha\u00eene en majuscule ou minuscule.</li> </ul>"},{"location":"constr_elem/","title":"Chapitre 1 : Constructions \u00e9l\u00e9mentaires","text":"Activit\u00e9 1-01 : Prise en main de Jupyter <p>Objectifs :</p> <ul> <li>Ex\u00e9cuter des cellules de carnet Jupyter et d\u00e9couvrir les boutons les plus utiles.</li> <li>Faire la diff\u00e9rence entre une expression et une instruction.</li> <li>Installer un certain nombre de modules compl\u00e9mentaires qui seront utilis\u00e9s dans la suite du cours de NSI.</li> </ul> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"constr_elem/#partie-a-variables-affectations-et-sequences-dinstructions","title":"Partie A - Variables, affectations et s\u00e9quences d'instructions","text":""},{"location":"constr_elem/#variables","title":"Variables","text":"<p>Une variable est une r\u00e9f\u00e9rence \u00e0 une zone de la m\u00e9moire de l'ordinateur dans laquelle est stock\u00e9e une valeur.</p> <p>Pour attribuer une valeur \u00e0 une variable ou pour modifier sa valeur, on r\u00e9alise une affectation.</p> <pre><code>x = 0\n</code></pre> <p>Une variable appel\u00e9e <code>x</code> a \u00e9t\u00e9 d\u00e9finie, et la valeur <code>0</code> a \u00e9t\u00e9 stock\u00e9e dans la variable gr\u00e2ce \u00e0 une affectation, not\u00e9e <code>=</code> en Python.</p> <p>Pour afficher \u00e0 l'\u00e9cran la valeur de la variable <code>x</code>, on utilise la fonction <code>print</code>.</p> <pre><code>print(x)\n</code></pre> <p>Attention aux noms de variables choisis</p> <p>Le nom d'une variable doit \u00eatre choisi de sorte que l'on comprenne rapidement le r\u00f4le de cette variable.</p> <p>Le nom peut contenir des lettres, des chiffres et certains caract\u00e8res sp\u00e9ciaux. Il doit commencer par une lettre minuscule.</p> <p>De plus, certains mots-cl\u00e9s du langage Python ne peuvent pas \u00eatre utilis\u00e9s comme nom de variable.</p>"},{"location":"constr_elem/#sequences-dinstructions","title":"S\u00e9quences d'instructions","text":"<p>Le langage de programmation Python est un langage de programmation imp\u00e9rative. Cela signifie que les instructions sont ex\u00e9cut\u00e9es les unes apr\u00e8s les autres, dans l'ordre.</p> <p>Consid\u00e9rons par exemple la s\u00e9quence d'instructions suivante :</p> <pre><code>total = 0\nnote = 13\ntotal = total + note\nnote = 15\ntotal = total + note\nnote = 8\ntotal = total + note\nmoyenne = total / 3\n</code></pre> <ul> <li> <p>Ligne <code>1</code> : On d\u00e9finit une variable <code>total</code> en lui affectant la valeur <code>0</code>. Cette \u00e9tape s'appelle l'initialisation de la variable.</p> </li> <li> <p>Ligne <code>2</code> : On initialise une variable <code>note</code> en lui affectant la valeur <code>13</code>.</p> </li> <li> <p>Ligne <code>3</code> : On calcule d'abord la somme de la valeur de <code>total</code> (<code>0</code>) et de la valeur de <code>note</code> (<code>13</code>). On affecte ensuite le r\u00e9sultat (<code>13</code>) \u00e0 la variable <code>total</code>. L'ancienne valeur de <code>total</code> (<code>0</code>) est \u00e9cras\u00e9e par sa nouvelle valeur (<code>13</code>).</p> </li> <li> <p>Ligne <code>4</code> : Une nouvelle valeur est affect\u00e9e \u00e0 la variable <code>note</code>. L'ancienne valeur de <code>note</code> (<code>13</code>) est \u00e9cras\u00e9e par sa nouvelle valeur (<code>15</code>).</p> </li> <li> <p>Etc.</p> </li> </ul> Suivi de l'\u00e9volution de la valeur de variables <p>On peut repr\u00e9senter par un tableau les valeurs successives des variables au fur et \u00e0 mesure de l'ex\u00e9cution des lignes de code.</p> <p>Par exemple, pour le programme ci-dessus, voici le tableau obtenu :</p> Ligne <code>total</code> <code>note</code> <code>moyenne</code> Remarque 1 <code>0</code> La variable <code>total</code> est initialis\u00e9e. 2 <code>0</code> <code>13</code> La variable <code>`note</code> est initialis\u00e9e. 3 <code>13</code> <code>13</code> La valeur de <code>total</code> est \u00e9cras\u00e9e et remplac\u00e9e par une nouvelle valeur. 4 <code>13</code> <code>15</code> La valeur de <code>note</code> est \u00e9cras\u00e9e et remplac\u00e9e par une nouvelle valeur. 5 <code>28</code> <code>15</code> La valeur de <code>total</code> est \u00e9cras\u00e9e et remplac\u00e9e par une nouvelle valeur. 6 <code>28</code> <code>8</code> La valeur de <code>note</code> est \u00e9cras\u00e9e et remplac\u00e9e par une nouvelle valeur. 7 <code>36</code> <code>8</code> La valeur de <code>total</code> est \u00e9cras\u00e9e et remplac\u00e9e par une nouvelle valeur. 8 <code>36</code> <code>8</code> <code>12.0</code> La variable <code>moyenne</code> est initialis\u00e9e. Exercice 1-02 : Suivi de l'\u00e9volution de la valeur de variables <p>Objectif : \u00c0 l'aide d'un tableau de valeurs, suivre l'\u00e9volution de la valeur de plusieurs variables au cours de l'ex\u00e9cution d'une s\u00e9quence d'affectations.</p> <p>\u00c9nonc\u00e9</p> <p>1. Repr\u00e9senter sous forme de tableau les valeurs successives des variables lors de l'ex\u00e9cution de la s\u00e9quence d'instructions suivante :</p> <pre><code>a = 3\nb = 7\na = a + b\nb = a - b\na = a - b\n</code></pre> <p>2. Quel effet est produit par l'ex\u00e9cution des lignes <code>3</code> \u00e0 <code>5</code> ?</p> Corrig\u00e9 <p>1.</p> Ligne de code <code>a</code> <code>b</code> <code>a = 3</code> 3 <code>b = 7</code> 3 7 <code>a = a + b</code> 10 7 <code>b = a - b</code> 10 3 <code>a = a - b</code> 7 3 <p>2. L'ex\u00e9cution des lignes <code>3</code> \u00e0 <code>5</code> entra\u00eene un \u00e9change des valeurs des variables <code>a</code> et <code>b</code>.</p>"},{"location":"constr_elem/#tutor-magic","title":"Tutor Magic","text":"<p>Tutor Magic est un outil qui permet, dans un carnet Jupyter, de suivre pas \u00e0 pas la valeur des variables pendant l'ex\u00e9cution d'une s\u00e9quence d'instructions.</p> <p>Il faut commencer par charger Tutor Magic en ex\u00e9cutant la commande suivante dans une cellule du carnet :</p> <pre><code>%load_ext tutormagic\n</code></pre> <p>Il suffit ensuite d'ajouter la ligne suivante au dessus de la s\u00e9quence d'instructions \u00e0 \u00e9tudier :</p> <pre><code>%%tutor --lang python3 --heapPrimitives\n</code></pre> <p>Voici le r\u00e9sultat obtenu :</p> <p></p> Activit\u00e9 1-03 : Utilisation de Tutor Magic <p>Objectif : Utiliser l'outil Tutor Magic.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"constr_elem/#partie-b-conditions-et-boucles","title":"Partie B - Conditions et boucles","text":"<p>Comme tous les langages de programmation imp\u00e9ratifs, Python dispose d'un ensemble de structures qui permettent d'ex\u00e9cuter des instructions de mani\u00e8re r\u00e9p\u00e9t\u00e9e ou lorsqu'un certain test est r\u00e9ussi. </p>"},{"location":"constr_elem/#instructions-conditionnelles","title":"Instructions conditionnelles","text":"<p>On utilise une condition, ou instruction conditionnelle, lorsque les instructions \u00e0 ex\u00e9cuter d\u00e9pendent du r\u00e9sultat (<code>Vrai</code> ou <code>Faux</code>) d'un certain test.</p> <p>Par exemple, si la valeur de la variable <code>moyenne</code> est strictement inf\u00e9rieure \u00e0 <code>10</code>, on souhaite afficher \u00e0 l'\u00e9cran le message <code>\"\u00c9chec\"</code>.</p> <pre><code>moyenne = 9.6\nif moyenne &lt; 10:\n    print(\"\u00c9chec\")\n</code></pre> <p>La condition est introduite par le mot-cl\u00e9 <code>if</code>, qui est directement suivi par le test \u00e0 effectuer. La ligne se termine par <code>:</code>.</p> <p>Le test consiste \u00e0 v\u00e9rifier si oui ou non la valeur de la variable <code>moyenne</code> est strictement inf\u00e9rieure \u00e0 <code>10</code>.</p> <ul> <li> <p>Dans le cas o\u00f9 c'est vrai (<code>True</code> en Python), on ex\u00e9cute l'instruction <code>print(\"\u00c9chec\")</code>, qui provoque l'affichage demand\u00e9 \u00e0 l'\u00e9cran.</p> </li> <li> <p>Dans le cas o\u00f9 c'est faux (<code>False</code> en Python), l'instruction <code>print(\"\u00c9chec\")</code> n'est pas ex\u00e9cut\u00e9e, et rien ne s'affiche \u00e0 l'\u00e9cran.</p> </li> </ul> <p>Attention \u00e0 la virgule math\u00e9matique en Python</p> <p>La virgule math\u00e9matique est not\u00e9e par un <code>.</code> en Python. C'est la notation anglo-saxonne.</p> <p>On souhaite d\u00e9sormais que, dans le cas o\u00f9 la valeur de <code>moyenne</code> est strictement inf\u00e9rieure \u00e0 <code>10</code>, le message \"\u00c9chec\" s'affiche \u00e0 l'\u00e9cran mais que, dans le cas contraire, le message \"Succ\u00e8s\" s'affiche.</p> <pre><code>moyenne = 9.6\nif moyenne &lt; 10:\n    print(\"\u00c9chec\")\nelse:\n    print(\"Succ\u00e8s\")\n</code></pre> <p>Le mot-cl\u00e9 <code>else</code>, suivi de <code>:</code>, permet d'indiquer quelles sont les instructions \u00e0 ex\u00e9cuter dans le cas o\u00f9 le test est faux.</p> <p>On peut remarquer que, dans les exemples pr\u00e9c\u00e9dents, les instructions <code>print(\"\u00c9chec\")</code> et <code>print(\"Succ\u00e8s\")</code> sont d\u00e9cal\u00e9es horizontalement de quatre espaces vers la droite. On parle d'indentation. C'est un concept fondamental du langage Python, qu'on ne retrouve pas dans la grande majorit\u00e9 des autres langages de programmation.</p> <p>L'indentation est utilis\u00e9e pour signaler pr\u00e9cisement le d\u00e9but et la fin des s\u00e9quences d'instructions qui doivent \u00eatre ex\u00e9cut\u00e9es.</p> <p>Op\u00e9rateurs de comparaison</p> <p>Pour l'\u00e9criture des tests, on aura r\u00e9guli\u00e8rement recours aux op\u00e9rateurs math\u00e9matiques de comparaison :</p> <ul> <li><code>==</code> est \u00e9gal \u00e0,</li> <li><code>!=</code> n'est pas \u00e9gal \u00e0,</li> <li><code>&lt;</code> est strictement inf\u00e9rieur \u00e0,</li> <li><code>&gt;</code> est strictement sup\u00e9rieur \u00e0,</li> <li><code>&lt;=</code> est inf\u00e9rieur ou \u00e9gal \u00e0,</li> <li><code>&gt;=</code> est sup\u00e9rieur ou \u00e9gal \u00e0.</li> </ul> Exercice 1-04 : Instructions conditionnelles <p>Objectif : \u00c9crire des instructions conditionnelles.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"constr_elem/#boucle-bornee-boucle-pour","title":"Boucle born\u00e9e (boucle pour)","text":"<p>Lorsque l'on souhaite ex\u00e9cuter plusieurs fois de suite une m\u00eame s\u00e9quence d'instructions, et que l'on connait a priori le nombre de r\u00e9p\u00e9titions souhait\u00e9es, on utilise une boucle born\u00e9e.</p> <p>Par exemple, si on ex\u00e9cute la s\u00e9quence d'instructions suivantes :</p> <pre><code>for nombre in range(10):\n    carre = nombre * nombre\n    cube = nombre * nombre * nombre\n    print(\"Le carr\u00e9 du nombre\", nombre, \"est\", carre, \"et son cube est\", cube)\nprint(\"Ex\u00e9cution termin\u00e9e\")\n</code></pre> <p>alors l'affichage obtenu est :</p> <pre><code>Le carr\u00e9 du nombre 0 est 0 et son cube est 0\nLe carr\u00e9 du nombre 1 est 1 et son cube est 1\nLe carr\u00e9 du nombre 2 est 4 et son cube est 8\nLe carr\u00e9 du nombre 3 est 9 et son cube est 27\nLe carr\u00e9 du nombre 4 est 16 et son cube est 64\nLe carr\u00e9 du nombre 5 est 25 et son cube est 125\nLe carr\u00e9 du nombre 6 est 36 et son cube est 216\nLe carr\u00e9 du nombre 7 est 49 et son cube est 343\nLe carr\u00e9 du nombre 8 est 64 et son cube est 512\nLe carr\u00e9 du nombre 9 est 81 et son cube est 729\nEx\u00e9cution termin\u00e9e\n</code></pre> <p>La boucle pour est introduite par le mot-cl\u00e9 <code>for</code> et la premi\u00e8re ligne se termine par <code>:</code>.</p> <p>Sur les lignes <code>2</code> \u00e0 <code>4</code> est \u00e9crite la s\u00e9quence d'instructions \u00e0 ex\u00e9cuter plusieurs fois. Elle est indent\u00e9e.</p> <p>La ligne <code>5</code>, qui n'est pas indent\u00e9e, ne fait pas partie de la s\u00e9quence d'instructions \u00e0 r\u00e9p\u00e9ter. Elle n'est donc ex\u00e9cut\u00e9e qu'une seule fois, apr\u00e8s la fin de la boucle pour.</p> Visualisation \u00e0 l'aide de Tutor Magic <p></p> <p>\u00c0 propos de l'expression <code>range(10)</code></p> <p>L'expression <code>range(10)</code> permet de pr\u00e9ciser qu'on souhaite dix r\u00e9p\u00e9titions, pour tous les entiers <code>nombre</code> allant de <code>0</code> \u00e0 <code>9</code>.</p> <p>Lorsque la s\u00e9quence d'instructions est ex\u00e9cut\u00e9e pour la premi\u00e8re fois, la variable <code>nombre</code> a pour valeur <code>0</code>.</p> <p>Ensuite, la m\u00eame s\u00e9quence d'instructions est ex\u00e9cut\u00e9e \u00e0 nouveau, mais cette fois la variable <code>nombre</code> a pour valeur <code>1</code>.</p> <p>La s\u00e9quence est ensuite ex\u00e9cut\u00e9e alors que la variable <code>nombre</code> a pour valeur <code>2</code>, puis <code>3</code>, puis <code>4</code>, etc. jusqu'\u00e0 <code>9</code>.</p> Exercice 1-05 : Diff\u00e9rentes utilisations de <code>range</code> <p>Objectif : Comprendre comment s'utilise <code>range</code> dans l'\u00e9criture d'une boucle pour.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> Exercice 1-06 : Boucles born\u00e9es <p>Objectif : \u00c9crire des boucles born\u00e9es.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"constr_elem/#boucle-non-bornee-boucle-tant-que","title":"Boucle non born\u00e9e (boucle tant que)","text":"<p>Lorsque l'on souhaite ex\u00e9cuter plusieurs fois de suite une m\u00eame s\u00e9quence d'instructions, et que l'on ne connait pas a priori le nombre de r\u00e9p\u00e9titions souhait\u00e9es, on utilise une boucle non born\u00e9e.</p> <p>Par exemple, si on ex\u00e9cute la s\u00e9quence d'instructions suivantes :</p> <pre><code>nombre = 1\nwhile nombre &lt; 2000000:\n    print(nombre)\n    nombre = nombre * 16\nprint(\"Ex\u00e9cution termin\u00e9e\")\n</code></pre> <p>alors l'affichage obtenu est :</p> <pre><code>1\n16\n256\n4096\n65536\n1048576\nEx\u00e9cution termin\u00e9e\n</code></pre> <p>La boucle tant que est introduite par le mot-cl\u00e9 <code>while</code>, suivi d'une condition qui doit \u00eatre vraie pour que la s\u00e9quence d'instructions s'ex\u00e9cute. La premi\u00e8re ligne se termine par <code>:</code>.</p> <p>Sur les lignes <code>2</code> et <code>3</code> est \u00e9crite la s\u00e9quence d'instructions \u00e0 ex\u00e9cuter plusieurs fois, et elle est indent\u00e9e.</p> <p>La ligne <code>4</code>, qui n'est pas indent\u00e9e, ne fait pas partie de la s\u00e9quence d'instructions \u00e0 r\u00e9p\u00e9ter. Elle n'est donc ex\u00e9cut\u00e9e qu'une seule fois, apr\u00e8s la fin de la boucle tant que.</p> Visualisation \u00e0 l'aide de Tutor Magic <p></p> <p>Attention aux boucles infinies</p> <p>Il faut s'assurer que la condition qui d\u00e9finit la boucle tant que devient fausse \u00e0 un moment donn\u00e9. Dans le cas contraire, on parle de boucle infinie, et le programme ne fonctionne pas car on ne sort jamais de la boucle.</p> <pre><code>nombre = 1\nwhile nombre != 0:  # ATTENTION : BOUCLE INFINIE !\n    nombre = nombre + 1\nprint(\"Ex\u00e9cution termin\u00e9e\")  # Cette ligne ne sera jamais ex\u00e9cut\u00e9e\n</code></pre> <p>La variable <code>nombre</code> est initialis\u00e9e \u00e0 <code>1</code> et elle augmente ensuite d'une unit\u00e9 lors de chaque passage dans la boucle. Elle ne sera donc jamais \u00e9gale \u00e0 <code>0</code> et la boucle ne s'arr\u00eatera donc jamais.</p> Exercice 1-07 : Boucles non born\u00e9es <p>Objectif : \u00c9crire des boucles non born\u00e9es.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"constr_elem/#partie-c-exercices-et-activites","title":"Partie C - Exercices et activit\u00e9s","text":"Exercices 1-08 \u00e0 1-13 Exercice 1-08 : Plus grande valeurExercice 1-09 : Variables et bouclesExercice 1-10 : MandalaExercice 1-11 : Lancers d'un d\u00e9Exercice 1-12 : Carr\u00e9s color\u00e9s (1)Exercice 1-13 : Carr\u00e9s color\u00e9s (2) <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Corrig\u00e9 disponible ici</p> Activit\u00e9s 1-14 \u00e0 1-16 Activit\u00e9 1-14 : Le jeu du nombre myst\u00e8reActivit\u00e9 1-15 : Une variante du jeu du PenduActivit\u00e9 1-16 : Le jeu du Juste prix <p>Objectifs :</p> <ul> <li>Utiliser des instructions conditionnelles et des boucles.</li> <li>D\u00e9couvrir la fonction permettant de tirer al\u00e9atoirement un nombre entier.</li> <li>D\u00e9couvrir la fonction permettant de demander \u00e0 l'utilisateur de faire une saisie au clavier.</li> </ul> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Objectif : Analyser un code et y rep\u00e9rer les variables, les affectations, les instructions conditionnelles et les boucles.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Objectif : Mettre en \u0153uvre de nombreuses notions : variables et affectations, instructions conditionnelles, boucles, tirage d'entiers al\u00e9atoires, affichages \u00e0 l'\u00e9cran, saisies au clavier.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"constr_elem/#ce-quil-faut-savoir-et-savoir-faire","title":"Ce qu'il faut savoir et savoir faire","text":"<ul> <li>Modifier et ex\u00e9cuter des cellules dans un carnet Jupyter.</li> <li>\u00c9crire une instruction conditionnelle.</li> <li>\u00c9crire une boucle born\u00e9e de la forme <code>for variable in range(nb_repetitions):</code>.</li> <li>\u00c9crire une boucle non born\u00e9e...</li> <li>... mais pas une boucle infinie.</li> <li>Utiliser correctement l'indentation pour d\u00e9finir les s\u00e9quences d'instructions.</li> <li>\u00catre capable de suivre la valeur d'une variable au cours de l'ex\u00e9cution d'une s\u00e9quence d'instructions, \u00e0 la main ou \u00e0 l'aide de Tutor Magic.</li> <li>Faire un affichage \u00e0 l'\u00e9cran avec la fonction <code>print</code>.</li> <li>Tirer un nombre entier au hasard avec la fonction <code>randint</code>.</li> <li>Demander \u00e0 l'utilisateur de saisir un entier au clavier avec la commande <code>int(input())</code>.</li> <li>Conna\u00eetre la diff\u00e9rence entre les expressions <code>range(a)</code>, <code>range(a, b)</code> et <code>range(a, b, c)</code>.</li> </ul>"},{"location":"dictionnaires/","title":"Chapitre 6 : p-uplets et dictionnaires","text":"<p>Cours et exercices \u00e0 t\u00e9l\u00e9charger ici. Le corrig\u00e9 est disponible ici</p> <p>Page en construction...</p>"},{"location":"dictionnaires/#partie-a-p-uplets","title":"Partie A - p-uplets","text":""},{"location":"dictionnaires/#notion-de-p-uplet","title":"Notion de p-uplet","text":"<p>Un p-uplet permet, comme un tableau, de stocker en m\u00e9moire plusieurs valeurs dans une seule variable. En Python, le type p-uplet est appel\u00e9 <code>tuple</code>.</p> <p>Les extr\u00e9mit\u00e9s du p-uplet sont rep\u00e9r\u00e9es par des parenth\u00e8ses et les valeurs sont s\u00e9par\u00e9es par des virgules.</p> <pre><code>date = ('La prise de la Bastille', 14, 7, 1789)\n</code></pre> <p>Comme pour un tableau, les valeurs contenues dans un p-uplet sont index\u00e9es par des entiers, \u00e0 partir de l'index <code>0</code>, et la fonction <code>len</code> permet de conna\u00eetre le nombre de valeurs contenues dans le p-uplet.</p> <p>L'instruction...</p> <pre><code>print(f\"{date[0]} a eu lieu le {date[1]}/{date[2]}/{date[3]}.\")\nprint(f\"Longueur : {len(date)}\")\n</code></pre> <p>... provoque l'affichage...</p> <pre><code>La prise de la Bastille a eu lieu le 14/7/1789.\nLongueur : 4\n</code></pre> <p>Mais, \u00e0 la diff\u00e9rence d'un tableau, il n'est pas possible de modifier les valeurs contenues dans un p-uplet, ou d'en ajouter. On parle d'immutabilit\u00e9.</p> <p>Les affectations suivantes provoquent une erreur :</p> <pre><code>date[0] = \"La f\u00eate de la F\u00e9d\u00e9ration\"\ndate[3] = 1790\n</code></pre> <p>Seule une red\u00e9finition compl\u00e8te du p-uplet est possible.</p> <pre><code>date = ('La f\u00eate de la F\u00e9d\u00e9ration', 14, 7, 1790)\nprint(f\"{date[0]} a eu lieu le {date[1]}/{date[2]}/{date[3]}.\")\n</code></pre> <p>On obtient alors l'affichage :</p> <pre><code>La f\u00eate de la F\u00e9d\u00e9ration a eu lieu le 14/7/1790.\n</code></pre>"},{"location":"dictionnaires/#utilisation-des-p-uplets-pour-permettre-a-une-fonction-de-retourner-plusieurs-valeurs","title":"Utilisation des p-uplets pour permettre \u00e0 une fonction de retourner plusieurs valeurs","text":""},{"location":"dictionnaires/#partie-b-dictionnaires","title":"Partie B - Dictionnaires","text":"<p>Les \u00e9l\u00e9ments d'un tableau ou d'un p-uplet sont toujours index\u00e9s par des entiers positifs, ce qui peut rendre leur manipulation d\u00e9licate ou cr\u00e9er des confusions.</p> <p>En reprenant l'exemple des pays de l'UE trait\u00e9 pr\u00e9c\u00e9demment, il est n\u00e9cessaire de se souvenir que chaque pays est repr\u00e9sent\u00e9 par un p-uplet dont la premi\u00e8re valeur est le nom du pays, la deuxi\u00e8me la population et la troisi\u00e8me la superficie.</p> <p>Si on souhaite que les valeurs soient index\u00e9es par des mots-cl\u00e9s plut\u00f4t que par des entiers, on utilise un type de variable particulier : un dictionnaire.</p> <p>Les extr\u00e9mit\u00e9s d'un dictionnaire sont rep\u00e9r\u00e9es par des accolades. Chaque valeur est pr\u00e9c\u00e9d\u00e9e d'une cl\u00e9, avec la syntaxe <code>cle : valeur</code>, et les associations cl\u00e9-valeur sont s\u00e9par\u00e9es les unes des autres par des virgules.</p> <pre><code>pays = {\"nom\": \"la France\", \"population\": 66661, \"superficie\": 544000}\n</code></pre>"},{"location":"dictionnaires/#ce-que-vous-devez-savoir","title":"Ce que vous devez savoir","text":"<ul> <li>D\u00e9finir un p-uplet.</li> <li>Acc\u00e9der aux valeurs contenues dans un p-uplet via leur index.</li> <li>Utiliser la fonction <code>round</code> pour arrondir une valeur num\u00e9rique.</li> <li>Utiliser la fonction <code>clear_output</code> effacer l'affichage sous la cellule en cours d'ex\u00e9cution.</li> <li>D\u00e9finir un dictionnaire en listant ses associations cl\u00e9-valeur.</li> <li>Utiliser sur un dictionnaire la fonction <code>len</code> et les commandes <code>.keys()</code>, <code>.values()</code> et <code>.items()</code>.</li> <li>\u00c9crire une assertion permettant de v\u00e9rifier qu'un dictionnaire dispose de certaines cl\u00e9s.</li> <li>Ajouter ou supprimer des associations cl\u00e9/valeur dans un dictionnaire.</li> </ul>"},{"location":"documentation_nuit_du_code/","title":"Documentation du module <code>pyxel</code> pour la Nuit du Code","text":"<p>Pyxel est un moteur de jeu vid\u00e9o r\u00e9tro pour Python.</p> <p>Gr\u00e2ce \u00e0 ses sp\u00e9cifications simples inspir\u00e9es par les consoles r\u00e9tro, comme le fait que seulement 16 couleurs peuvent \u00eatre affich\u00e9es et que seulement 4 sons peuvent \u00eatre lus en m\u00eame temps, vous pouvez vous sentir libre de cr\u00e9er des jeux vid\u00e9o dans le style pixel art.</p> <p></p> <p>La motivation pour le d\u00e9veloppement de Pyxel est le feedback des utilisateurs. Veuillez donner une \u00e9toile \u00e0 Pyxel sur GitHub !</p> <p> </p> <p>Les sp\u00e9cifications et les API de Pyxel sont inspir\u00e9es de PICO-8 et TIC-80.</p> <p>Pyxel est un logiciel libre et open source. Commen\u00e7ons \u00e0 faire un jeu vid\u00e9o r\u00e9tro avec Pyxel\u202f!</p>"},{"location":"documentation_nuit_du_code/#specifications","title":"Sp\u00e9cifications","text":"<ul> <li>Fonctionne sur Windows, Mac, Linux et Web</li> <li>Programmable en Python</li> <li>Palette de 16 couleurs</li> <li>3 banques d\u2019images de taille 256x256</li> <li>8 tilemaps (niveaux ou sc\u00e8nes) de taille 256x256</li> <li>4 canaux avec 64 sons configurables</li> <li>8 musiques pouvant combiner des sons arbitraires</li> <li>Entr\u00e9es clavier, souris et manettes</li> <li>\u00c9diteur d\u2019images et de sons</li> </ul>"},{"location":"documentation_nuit_du_code/#palette-de-couleurs","title":"Palette de couleurs","text":""},{"location":"documentation_nuit_du_code/#comment-installer","title":"Comment installer","text":""},{"location":"documentation_nuit_du_code/#windows","title":"Windows","text":"<p>Apr\u00e8s avoir install\u00e9 Python3 (version 3.7 ou plus), lancez la commande suivante :</p> <pre><code>pip install -U pyxel\n</code></pre> <p>Si vous installez Python \u00e0 l'aide de l'installateur officiel, veuillez cocher la case <code>Add Python 3.x to PATH</code> pour activer la commande <code>pyxel</code>.</p>"},{"location":"documentation_nuit_du_code/#mac","title":"Mac","text":"<p>Apr\u00e8s avoir install\u00e9 Homebrew, ex\u00e9cutez les commandes suivantes :</p> <pre><code>brew install pipx\npipx ensurepath\npipx install pyxel\n</code></pre> <p>Pour mettre \u00e0 jour la version apr\u00e8s avoir install\u00e9 Pyxel, ex\u00e9cutez <code>pipx upgrade pyxel</code>.</p>"},{"location":"documentation_nuit_du_code/#linux","title":"Linux","text":"<p>Apr\u00e8s avoir install\u00e9 le paquet SDL2 (<code>libsdl2-dev</code> pour Ubuntu), Python3 (version 3.7 ou plus), et <code>python3-pip</code>, lancez la commande suivante :</p> <pre><code>sudo pip3 install -U pyxel\n</code></pre> <p>Si ce qui pr\u00e9c\u00e8de ne fonctionne pas, essayez l'autoconstruction en suivant les instructions de Makefile.</p>"},{"location":"documentation_nuit_du_code/#web","title":"Web","text":"<p>La version web de Pyxel ne n\u00e9cessite pas d'installation de Python ou de Pyxel et fonctionne aussi bien sur les PC que sur les smartphones et tablettes avec des navigateurs web pris en charge.</p> <p>Pour des instructions sp\u00e9cifiques, veuillez vous r\u00e9f\u00e9rer \u00e0 cette page.</p>"},{"location":"documentation_nuit_du_code/#lancer-les-exemples-de-pyxel","title":"Lancer les exemples de Pyxel","text":"<p>Apr\u00e8s l\u2019installation de Pyxel, les exemples de Pyxel seront copi\u00e9s dans le r\u00e9pertoire courant avec la commande suivante\u202f:</p> <pre><code>pyxel copy_examples\n</code></pre> <p>Les exemples copi\u00e9s sont les suivants\u202f:</p> 01_hello_pyxel.py Application simple Demo Code 02_jump_game.py Jeu de saut avec les fichiers de ressources Pyxel Demo Code 03_draw_api.py D\u00e9monstration de l\u2019API de dessin Demo Code 04_sound_api.py D\u00e9monstration de l\u2019API de son Demo Code 05_color_palette.py Liste des couleurs de la palette Demo Code 06_click_game.py Jeu de type pointer et cliquer Demo Code 07_snake.py Jeu du Snake avec une bande son Demo Code 08_triangle_api.py D\u00e9monstration de l\u2019API de dessin de triangle Demo Code 09_shooter.py Jeu de shoot'em up avec changement d\u2019\u00e9cran Demo Code 10_platformer.py Jeu de plateforme avec d\u00e9filement horizontal et une carte Demo Code 11_offscreen.py Rendu hors \u00e9cran avec la classe Image Demo Code 12_perlin_noise.py Animation du bruit de Perlin Demo Code 13_bitmap_font.py Dessiner une police bitmap Demo Code 14_synthesizer.py Synth\u00e9tiseur utilisant des fonctions d'expansion audio Demo Code 15_tiled_map_file.py Chargement et dessin d'un fichier de carte carrel\u00e9e (.tmx) Demo Code 99_flip_animation.py Animation avec la fonction flip (plateformes non-web uniquement) Demo Code 30SecondsOfDaylight.pyxapp 1er jeu gagnant du Pyxel Jam par Adam Demo Code megaball.pyxapp Jeu physique de balles d'arcade par Adam Demo Code 8bit-bgm-gen.pyxapp G\u00e9n\u00e9rateur de musique de fond fait par frenchbread Demo Code <p>Les exemples peuvent \u00eatre lanc\u00e9s avec les commandes suivantes :</p> <pre><code>cd pyxel_examples\npyxel run 01_hello_pyxel.py\npyxel play 30SecondsOfDaylight.pyxapp\n</code></pre>"},{"location":"documentation_nuit_du_code/#comment-utiliser","title":"Comment utiliser","text":""},{"location":"documentation_nuit_du_code/#creer-une-application-pyxel","title":"Cr\u00e9er une application Pyxel","text":"<p>Apr\u00e8s avoir import\u00e9 le module Pyxel dans votre script Python, sp\u00e9cifiez d\u2019abord la taille de la fen\u00eatre avec la fonction <code>init</code>, puis lancez l\u2019application Pyxel avec la fonction <code>run</code>.</p> <pre><code>import pyxel\n\npyxel.init(160, 120)\n\ndef update():\n    if pyxel.btnp(pyxel.KEY_Q):\n        pyxel.quit()\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(10, 10, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre> <p>Les arguments de la fonction <code>run</code> sont la fonction <code>update</code> pour mettre \u00e0 jour chaque frame et la fonction <code>draw</code> pour dessiner sur l\u2019\u00e9cran quand c\u2019est n\u00e9cessaire.</p> <p>Dans une vraie application, il est recommand\u00e9 de mettre le code Pyxel dans une classe comme ci-dessous\u202f:</p> <pre><code>import pyxel\n\nclass App:\n    def __init__(self):\n        pyxel.init(160, 120)\n        self.x = 0\n        pyxel.run(self.update, self.draw)\n\n    def update(self):\n        self.x = (self.x + 1) % pyxel.width\n\n    def draw(self):\n        pyxel.cls(0)\n        pyxel.rect(self.x, 0, 8, 8, 9)\n\nApp()\n</code></pre> <p>Lors de la cr\u00e9ation de graphiques simples sans animation, la fonction <code>show</code> peut \u00eatre utilis\u00e9e pour rendre le code plus concis.</p> <pre><code>import pyxel\n\npyxel.init(120, 120)\npyxel.cls(1)\npyxel.circb(60, 60, 40, 7)\npyxel.show()\n</code></pre>"},{"location":"documentation_nuit_du_code/#lancer-une-application-pyxel","title":"Lancer une application Pyxel","text":"<p>Le script Python cr\u00e9\u00e9 peut \u00eatre lanc\u00e9 en utilisant la commande suivante :</p> <pre><code>pyxel run PYTHON_SCRIPT_FILE\n</code></pre> <p>Il peut \u00e9galement \u00eatre ex\u00e9cut\u00e9 comme un script Python normal :</p> <pre><code>python3 PYTHON_SCRIPT_FILE\n</code></pre>"},{"location":"documentation_nuit_du_code/#controles-speciaux","title":"Contr\u00f4les sp\u00e9ciaux","text":"<p>Les contr\u00f4les sp\u00e9ciaux suivants peuvent \u00eatre lanc\u00e9s pendant qu\u2019une application Pyxel tourne\u202f:</p> <ul> <li><code>Esc</code>   Quitte l\u2019application</li> <li><code>Alt(Option)+1</code>   Sauvegarde la capture d\u2019\u00e9cran sur le bureau</li> <li><code>Alt(Option)+2</code>   R\u00e9initialise le temps de d\u00e9part de la capture vid\u00e9o</li> <li><code>Alt(Option)+3</code>   Sauvegarde la capture d\u2019\u00e9cran sur le bureau (jusqu\u2019\u00e0 10 secondes)</li> <li><code>Alt(Option)+9</code>   Passer d'un mode d'\u00e9cran \u00e0 l'autre (Crisp, Smooth, Retro)</li> <li><code>Alt(Option)+0</code>   Bascule vers le moniteur de performance (fps, temps de mise \u00e0 jour et temps de dessin)</li> <li><code>Alt(Option)+Enter</code>   Met en plein \u00e9cran</li> <li><code>Shift+Alt(Option)+1/2/3</code>   Enregistrer la banque d'images correspondante sur le bureau</li> <li><code>Shift+Alt(Option)+0</code>   Enregistrer la palette de couleurs actuelle sur le bureau</li> </ul>"},{"location":"documentation_nuit_du_code/#comment-creer-une-ressource","title":"Comment cr\u00e9er une ressource","text":"<p>L\u2019\u00e9diteur Pyxel peut cr\u00e9er des images et des sons utilisables dans des applications Pyxel.</p> <p>Il se lance avec la commande suivante :</p> <pre><code>pyxel edit PYXEL_RESOURCE_FILE\n</code></pre> <p>Si le fichier de ressource Pyxel (.pyxres) existe d\u00e9j\u00e0, le fichier est charg\u00e9, sinon, un nouveau fichier avec le nom indiqu\u00e9 est cr\u00e9\u00e9. Si le fichier de ressource n\u2019est pas sp\u00e9cifi\u00e9, le nom est <code>my_resource.pyxres</code>.</p> <p>Apr\u00e8s avoir lanc\u00e9 l\u2019\u00e9diteur Pyxel, le fichier peut \u00eatre chang\u00e9 en glissant-d\u00e9possant un autre fichier de ressource. Si le fichier est gliss\u00e9-d\u00e9pos\u00e9 en appuyant sur la touche <code>Ctrl(Cmd)</code>, seul le type de la ressource actuellement \u00e9dit\u00e9e (Image / Tilemap / Son / Musique) sera charg\u00e9. Cette op\u00e9ration permet de combiner plusieurs ressources dans un seul fichier.</p> <p>La ressource cr\u00e9\u00e9e peut \u00eatre charg\u00e9e avec la fonction <code>load</code>.</p> <p>L\u2019\u00e9diteur Pyxel a les modes suivants.</p> <p>\u00c9diteur d\u2019images\u202f</p> <p>Mode pour \u00e9diter les banques d\u2019images.</p> <p> </p> <p>Glisser-d\u00e9poser un fichier image (PNG/GIF/JPEG) dans l'\u00e9diteur d'images pour charger l'image dans la banque d'images actuellement s\u00e9lectionn\u00e9e.</p> <p>\u00c9diteur de tilemap\u202f</p> <p>Mode pour \u00e9diter les tilemaps, dans lesquelles les images des banques d\u2019images sont ordonn\u00e9es en motifs de tuiles.</p> <p> </p> <p>Glisser-d\u00e9poser un fichier TMX (Tiled Map File) dans l'\u00e9diteur de mosa\u00efques pour charger sa couche dans l'ordre de dessin correspondant au num\u00e9ro de la mosa\u00efque s\u00e9lectionn\u00e9e.</p> <p>\u00c9diteur de sons\u202f</p> <p>Mode pour \u00e9diter les sons.</p> <p> </p> <p>\u00c9diteur de musiques\u202f</p> <p>Mode pour \u00e9diter les musiques dans lesquelles les sons sont ordonn\u00e9s par ordre de lecture.</p> <p> </p>"},{"location":"documentation_nuit_du_code/#autres-methodes-pour-creer-des-ressources","title":"Autres m\u00e9thodes pour cr\u00e9er des ressources","text":"<p>Les images et tilemaps Pyxel peuvent \u00eatre aussi cr\u00e9\u00e9es avec les m\u00e9thodes suivantes :</p> <ul> <li>Cr\u00e9er une image depuis une liste de cha\u00eenes de caract\u00e8res avec la fonction <code>Image.set</code> ou la fonction <code>Tilemap.set</code></li> <li>Charger une image (PNG/GIF/JPEG) dans la palette Pyxel avec la fonction <code>Image.load</code></li> </ul> <p>Les sons Pyxel peuvent aussi \u00eatre cr\u00e9\u00e9s avec la m\u00e9thode suivante :</p> <ul> <li>Cr\u00e9er un son \u00e0 partir d\u2019une cha\u00eene de caract\u00e8res avec la fonction <code>Sound.set</code> ou la fonction <code>Music.set</code></li> </ul> <p>R\u00e9f\u00e9rez vous \u00e0 la documentation de l\u2019API pour l\u2019utilisation de ces fonctions.</p>"},{"location":"documentation_nuit_du_code/#comment-partager-une-application","title":"Comment partager une application","text":"<p>Pyxels a un format de fichier sp\u00e9cifique (fichier d\u2019application Pyxel) qui fonctionne sur les diff\u00e9rentes plateformes.</p> <p>Cr\u00e9ez le fichier d\u2019application Pyxel (.pyxapp) avec la commande suivante :</p> <pre><code>pyxel package APP_DIR STARTUP_SCRIPT_FILE\n</code></pre> <p>Si l'application doit inclure des ressources ou des modules suppl\u00e9mentaires, placez-les dans le r\u00e9pertoire de l'application.</p> <p>L\u2019application cr\u00e9\u00e9e peut \u00eatre ex\u00e9cut\u00e9e avec la commande suivante :</p> <pre><code>pyxel play PYXEL_APP_FILE\n</code></pre> <p>Le fichier d'application Pyxel peut aussi \u00eatre converti en un ex\u00e9cutable ou un fichier HTML avec les commandes <code>pyxel app2exe</code> ou <code>pyxel app2html</code>.</p>"},{"location":"documentation_nuit_du_code/#documentation-de-lapi","title":"Documentation de l\u2019API","text":""},{"location":"documentation_nuit_du_code/#systeme","title":"Syst\u00e8me","text":"<ul> <li> <p><code>width</code>, <code>height</code>   La largeur et la hauteur de l\u2019\u00e9cran</p> </li> <li> <p><code>frame_count</code>   Le nombre de frames pass\u00e9es</p> </li> <li> <p><code>init(width, height, [title], [fps], [quit_key], [display_scale], [capture_scale], [capture_sec])</code>   Initialise l\u2019application Pyxel avec un \u00e9cran de taille (<code>width</code>, <code>height</code>). Il est possible de passer comme options\u00a0: le titre de la fen\u00eatre avec <code>title</code>, le nombre d\u2019images par seconde avec <code>fps</code>, la touche pour quitter l\u2019application avec <code>quit_key</code>, l'\u00e9chelle de l'affichage avec <code>display_scale</code>, l\u2019\u00e9chelle des captures d\u2019\u00e9cran avec <code>capture_scale</code>, et le temps maximum d\u2019enregistrement vid\u00e9o avec <code>capture_sec</code>.   Par exemple\u00a0: <code>pyxel.init(160, 120, title=\"My Pyxel App\", fps=60, quit_key=pyxel.KEY_NONE, capture_scale=3, capture_sec=0)</code></p> </li> <li> <p><code>run(update, draw)</code>   Lance l\u2019application Pyxel et appelle la fonction <code>update</code> et la fonction <code>draw</code>.</p> </li> <li> <p><code>show()</code>   Affiche l\u2019\u00e9cran jusqu\u2019\u00e0 ce que la touche <code>Esc</code> soit appuy\u00e9e.</p> </li> <li> <p><code>flip()</code>   Rafra\u00eechit l'\u00e9cran d'une image. L'application se termine lorsque la touche <code>Esc</code> est press\u00e9e. Cette fonction ne fonctionne pas dans la version web.</p> </li> <li> <p><code>quit()</code>   Quitte l\u2019application Pyxel.</p> </li> </ul>"},{"location":"documentation_nuit_du_code/#ressources","title":"Ressources","text":"<ul> <li><code>load(filename, [excl_images], [excl_tilemaps], [excl_sounds], [excl_musics])</code>   Charge la ressource (.pyxres). Si une option est <code>True</code>, la ressource ne sera pas charg\u00e9e. Si un fichier de palette (.pyxpal) du m\u00eame nom existe au m\u00eame endroit que le fichier de ressource, la couleur d'affichage de la palette sera \u00e9galement modifi\u00e9e. Le fichier de palette est une entr\u00e9e hexad\u00e9cimale des couleurs d'affichage (par exemple <code>1100FF</code>), s\u00e9par\u00e9e par des nouvelles lignes. Le fichier de palette peut \u00e9galement \u00eatre utilis\u00e9 pour changer les couleurs affich\u00e9es dans l'\u00e9diteur Pyxel.</li> </ul>"},{"location":"documentation_nuit_du_code/#entrees","title":"Entr\u00e9es","text":"<ul> <li> <p><code>mouse_x</code>, <code>mouse_y</code>   La position actuelle du curseur de la souris</p> </li> <li> <p><code>mouse_wheel</code>   La valeur actuelle de la molette de la souris</p> </li> <li> <p><code>btn(key)</code>   Renvoie <code>True</code> si la touche <code>key</code> est appuy\u00e9e, sinon renvoie <code>False</code>. (liste des touches)</p> </li> <li> <p><code>btnp(key, [hold], [repeat])</code>   Renvoie <code>True</code> si la touche <code>key</code> est appuy\u00e9e \u00e0 cette frame, sinon renvoie <code>False</code>. Quand <code>hold</code> et <code>repeat</code> sont sp\u00e9cifi\u00e9s, <code>True</code> sera renvoy\u00e9 \u00e0 l\u2019intervalle de frame <code>repeat</code> quand la touche <code>key</code> est appuy\u00e9e pendant plus de <code>hold</code> frames.</p> </li> <li> <p><code>btnr(key)</code>   Renvoie <code>True</code> si la touche <code>key</code> est rel\u00e2ch\u00e9e \u00e0 cette frame, sinon renvoie <code>False</code></p> </li> <li> <p><code>mouse(visible)</code>   Si <code>visible</code> est <code>True</code>, affiche le curseur de la souris. Si <code>False</code>, le curseur est cach\u00e9. M\u00eame si le curseur n\u2019est pas affich\u00e9, sa position est actualis\u00e9e.</p> </li> </ul>"},{"location":"documentation_nuit_du_code/#graphiques","title":"Graphiques","text":"<ul> <li> <p><code>colors</code>   Liste les couleurs de la palette. Les couleurs sont sp\u00e9cifi\u00e9es avec une valeur 24-bit. Vous pouvez utiliser <code>colors.from_list</code> et <code>colors.to_list</code> pour directement donner et recevoir une liste Python.   Par exemple <code>old_colors = pyxel.colors.to_list(); pyxel.colors.from_list([0x111111, 0x222222, 0x333333]); pyxel.colors[15] = 0x112233</code></p> </li> <li> <p><code>images</code>   Liste des banques d'images (0-2). (Voir la classe Image)   Par exemple <code>pyxel.images[0].load(0, 0, \"title.png\")</code></p> </li> <li> <p><code>tilemaps</code>   Liste des cartes de tuiles (0-7). (voir la classe Tilemap)</p> </li> <li> <p><code>clip(x, y, w, h)</code>   D\u00e9fini la zone de dessin (<code>x</code>, <code>y</code>) avec une largeur <code>w</code> et une hauteur <code>h</code>. R\u00e9initialiser la zone de dessin au plein \u00e9cran avec <code>clip()</code></p> </li> <li> <p><code>camera(x, y)</code>   Change the upper left corner coordinates of the screen to (<code>x</code>, <code>y</code>). Reset the upper left corner coordinates to (<code>0</code>, <code>0</code>) with <code>camera()</code>.</p> </li> <li> <p><code>pal(col1, col2)</code>   Remplace la couleur <code>col1</code> avec <code>col2</code> au dessin. <code>pal()</code> pour r\u00e9initialiser la palette de couleurs.</p> </li> <li> <p><code>dither(alpha)</code>   Applique le tramage (pseudo-transparence) au dessin. Fixe <code>alpha</code> dans l'intervalle 0.0-1.0, o\u00f9 0.0 est transparent et 1.0 est opaque.</p> </li> <li> <p><code>cls(col)</code>   Efface l\u2019\u00e9cran avec la couleur <code>col</code></p> </li> <li> <p><code>pget(x, y)</code>   Renvoie la couleur au pixel (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>pset(x, y, col)</code>   Dessine un pixel de couleur <code>col</code> \u00e0 (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>line(x1, y1, x2, y2, col)</code>   Dessine une ligne de couleur <code>col</code> de (<code>x1</code>, <code>y1</code>) \u00e0 (<code>x2</code>, <code>y2</code>).</p> </li> <li> <p><code>rect(x, y, w, h, col)</code>   Dessine un rectangle de largeur <code>w</code>, de hauteur <code>h</code> et de couleur <code>col</code> \u00e0 partir de (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>rectb(x, y, w, h, col)</code>   Dessine les contours d\u2019un rectangle de largeur <code>w</code>, de hauteur <code>h</code> et de couleur <code>col</code> \u00e0 partir de (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>circ(x, y, r, col)</code>   Dessine un cercle de rayon <code>r</code> et de couleur <code>col</code> \u00e0 (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>circb(x, y, r, col)</code>   Dessine le contour d\u2019un cercle de rayon <code>r</code> et de couleur <code>col</code> \u00e0 (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>elli(x, y, w, h, col)</code>   Dessinez une ellipse de largeur <code>w</code>, de hauteur <code>h</code> et de couleur <code>col</code> \u00e0 partir de (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>ellib(x, y, w, h, col)</code>   Dessinez le contour d'une ellipse de largeur <code>w</code>, de hauteur <code>h</code> et de couleur <code>col</code> \u00e0 partir de (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>tri(x1, y1, x2, y2, x3, y3, col)</code>   Dessine un triangle avec les sommets (<code>x1</code>, <code>y1</code>), (<code>x2</code>, <code>y2</code>), (<code>x3</code>, <code>y3</code>) et de couleur <code>col</code></p> </li> <li> <p><code>trib(x1, y1, x2, y2, x3, y3, col)</code>   Dessine les contours d\u2019un triangle avec les sommets (<code>x1</code>, <code>y1</code>), (<code>x2</code>, <code>y2</code>), (<code>x3</code>, <code>y3</code>) et de couleur <code>col</code></p> </li> <li> <p><code>fill(x, y, col)</code>   Dessine une ellipse de largeur <code>w</code>, de hauteur <code>h</code> et de couleur <code>col</code> \u00e0 partir de (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>blt(x, y, img, u, v, w, h, [colkey])</code>   Copie la r\u00e9gion de taille (<code>w</code>, <code>h</code>) de (<code>u</code>, <code>v</code>) de la banque d\u2019image <code>img</code>(0-2) \u00e0 (<code>x</code>, <code>y</code>). Si une valeur n\u00e9gative est mise pour <code>w</code>(ou <code>h</code>), la copie sera invers\u00e9e horizontalement (ou verticalement). Si <code>colkey</code> est sp\u00e9cifi\u00e9e, elle sera trait\u00e9e comme une couleur transparente.</p> </li> </ul> <p></p> <ul> <li><code>bltm(x, y, tm, u, v, w, h, [colkey])</code>   Copie la r\u00e9gion de taille (<code>w</code>, <code>h</code>) de (<code>u</code>, <code>v</code>) de la tilemap <code>tm</code>(0-7) \u00e0 (<code>x</code>, <code>y</code>). Si une valeur n\u00e9gative est mise pour <code>w</code>(ou <code>h</code>), la copie sera invers\u00e9e horizontalement (ou verticalement). Si <code>colkey</code> est sp\u00e9cifi\u00e9e, elle sera trait\u00e9e comme une couleur transparente. La taille d\u2019une tuile est 8x8 pixels et elle est stor\u00e9e dans une tilemap en tant que paire <code>(tile_x, tile_y)</code>.</li> </ul> <p></p> <ul> <li><code>text(x, y, s, col)</code>   Dessine une cha\u00eene de caract\u00e8res <code>s</code> de couleur <code>col</code> \u00e0 (<code>x</code>, <code>y</code>).</li> </ul>"},{"location":"documentation_nuit_du_code/#audio","title":"Audio","text":"<ul> <li> <p><code>sounds</code>   Liste des sons (0-63). (voir la classe Sound)   par exemple\u202f:\u202f<code>pyxel.sounds[0].speed = 60</code></p> </li> <li> <p><code>musics</code>   Liste des musiques (0-7). (voir la classe Music)</p> </li> <li> <p><code>play(ch, snd, [tick], [loop])</code>   Joue le son <code>snd</code>(0-63) sur le canal <code>ch</code>(0-3). Si <code>snd</code> est une liste, les sons seront jou\u00e9s dans l\u2019ordre. La position de d\u00e9but de lecture peut \u00eatre sp\u00e9cifi\u00e9e par <code>tick</code>(1 tick = 1/120 secondes). Si <code>loop</code> est \u00e0 <code>True</code>, le son est jou\u00e9 en boucle.</p> </li> <li> <p><code>playm(msc, [tick], [loop])</code>   Joue la musique <code>msc</code>(0-7). La position de d\u00e9but de lecture peut \u00eatre sp\u00e9cifi\u00e9e par <code>tick</code>(1 tick = 1/120 secondes). Si <code>loop</code> est mis \u00e0 <code>True</code>, la musique est jou\u00e9 en boucle.</p> </li> <li> <p><code>stop([ch])</code>   Arr\u00eate le son du canal sp\u00e9cifi\u00e9 <code>ch</code>(0-3). <code>stop()</code> arr\u00eate tous les canaux.</p> </li> <li> <p><code>play_pos(ch)</code>   R\u00e9cup\u00e8re la position du son du canal <code>ch</code>(0-3) comme un tuple <code>(sound no, note no)</code>. Renvoie <code>None</code> quand le son est arr\u00eat\u00e9.</p> </li> </ul>"},{"location":"documentation_nuit_du_code/#mathematiques","title":"Math\u00e9matiques","text":"<ul> <li> <p><code>ceil(x)</code>   Renvoie le plus petit nombre entier sup\u00e9rieur ou \u00e9gal \u00e0 <code>x</code>.</p> </li> <li> <p><code>floor(x)</code>   Renvoie le plus grand nombre entier inf\u00e9rieur ou \u00e9gal \u00e0 <code>x</code>.</p> </li> <li> <p><code>sgn(x)</code>   Renvoie 1 lorsque <code>x</code> est positif, 0 lorsqu'il est nul, et -1 lorsqu'il est n\u00e9gatif.</p> </li> <li> <p><code>sqrt(x)</code>   Renvoie la racine carr\u00e9e de <code>x</code>.</p> </li> <li> <p><code>sin(deg)</code>   Renvoie le sinus de <code>deg</code> degr\u00e9s.</p> </li> <li> <p><code>cos(deg)</code>   Renvoie le cosinus de <code>deg</code> degr\u00e9s.</p> </li> <li> <p><code>atan2(y, x)</code>   Retourne l'arctangente de <code>y</code>/<code>x</code> en degr\u00e9s.</p> </li> <li> <p><code>rseed(seed)</code>   D\u00e9finit la graine du g\u00e9n\u00e9rateur de nombres al\u00e9atoires.</p> </li> <li> <p><code>rndi(a, b)</code>   Renvoie un nombre entier al\u00e9atoire sup\u00e9rieur ou \u00e9gal \u00e0 <code>a</code> et inf\u00e9rieur ou \u00e9gal \u00e0 <code>b</code>.</p> </li> <li> <p><code>rndf(a, b)</code>   Renvoie une d\u00e9cimale al\u00e9atoire sup\u00e9rieure ou \u00e9gale \u00e0 <code>a</code> et inf\u00e9rieure ou \u00e9gale \u00e0 <code>b</code>.</p> </li> <li> <p><code>nseed(seed)</code>   D\u00e9finit la graine du bruit de Perlin.</p> </li> <li> <p><code>noise(x, [y], [z])</code>   Renvoie la valeur du bruit de Perlin pour les coordonn\u00e9es sp\u00e9cifi\u00e9es.</p> </li> </ul>"},{"location":"documentation_nuit_du_code/#classe-image","title":"Classe Image","text":"<ul> <li> <p><code>width</code>, <code>height</code>   La largeur et la hauteur d\u2019une image</p> </li> <li> <p><code>get(x, y)</code>   Renvoie les donn\u00e9es de l\u2019image \u00e0 (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>set(x, y, data)</code>   Met la valeur de l\u2019image \u00e0 (<code>x</code>, <code>y</code>) suivant une liste de cha\u00eenes.   Par exemple <code>pyxel.images[0].set(10, 10, [\"0123\", \"4567\", \"89ab\", \"cdef\"])</code></p> </li> <li> <p><code>load(x, y, filename)</code>   Charge l\u2019image (PNG/GIF/JPEG) \u00e0 (<code>x</code>, <code>y</code>).</p> </li> </ul>"},{"location":"documentation_nuit_du_code/#classe-tilemap","title":"Classe Tilemap","text":"<ul> <li> <p><code>width</code>, <code>height</code>   La largeur et la hauteur de la tilemap</p> </li> <li> <p><code>imgsrc</code>   La banque d\u2019image (0-2) r\u00e9f\u00e9renc\u00e9e par la tilemap</p> </li> <li> <p><code>set(x, y, data)</code>   Met la tilemap \u00e0 (<code>x</code>, <code>y</code>) suivant une liste de cha\u00eenes.   Par exemple <code>pyxel.tilemap(0).set(0, 0, [\"0000 0100 a0b0\", \"0001 0101 a1b1\"])</code></p> </li> <li> <p><code>load(x, y, filename, layer)</code>   Chargez la couche dans l'ordre de dessin <code>couche</code>(0-) \u00e0 partir du fichier TMX (Tiled Map File) \u00e0 (<code>x</code>, <code>y</code>).</p> </li> <li> <p><code>pget(x, y)</code>   Renvoie la tile \u00e0 (<code>x</code>, <code>y</code>). Une tile est un tuple <code>(tile_x, tile_y)</code>.</p> </li> <li> <p><code>pset(x, y, tile)</code>   Dessine une <code>tile</code> \u00e0 (<code>x</code>, <code>y</code>). Une tile est un tuple <code>(tile_x, tile_y)</code>.</p> </li> </ul>"},{"location":"documentation_nuit_du_code/#classe-sound","title":"Classe Sound","text":"<ul> <li> <p><code>notes</code>   Liste des notes (0-127). Plus le nombre est haut, plus la note est haute, et \u00e0 33 \u00e7a devient 'A2' (440Hz). Le reste est \u00e0 -1.</p> </li> <li> <p><code>tones</code>   Liste les tons (0:Triangle / 1:Square / 2:Pulse / 3:Noise)</p> </li> <li> <p><code>volumes</code>   Liste les volumes (0-7)</p> </li> <li> <p><code>effects</code>   Liste les effets (0:None / 1:Slide / 2:Vibrato / 3:FadeOut)</p> </li> <li> <p><code>speed</code>   Vitesse de lecture. 1 est le plus rapide, et plus le nombre est grand, plus la vitesse est lente. \u00e0 120, la longueur d\u2019une note est de 1 second.</p> </li> <li> <p><code>set(notes, tones, volumes, effects, speed)</code>   Met les valeurs de notes, tones, volumes et effects avec une cha\u00eene. Si les tons, volumes et effets sont plus courts que les notes, ils sont r\u00e9p\u00e9t\u00e9s depuis le d\u00e9but.</p> </li> <li> <p><code>set_notes(notes)</code>   Met les notes avec une cha\u00eene de 'CDEFGAB'+'#-'+'01234' ou 'R'. Insensible \u00e0 la casse et les espaces sont ignor\u00e9s.   Par exemple <code>pyxel.sounds[0].set_notes(\"G2B-2D3R RF3F3F3\")</code></p> </li> <li> <p><code>set_tones(tones)</code>   Met les tons avec une cha\u00eene de 'TSPN'. Insensible \u00e0 la casse et les espaces sont ignor\u00e9s.   Par exemple <code>pyxel.sounds[0].set_tones(\"TTSS PPPN\")</code></p> </li> <li> <p><code>set_volumes(volumes)</code>   Met les volumes avec une cha\u00eene de '01234567'. Insensible \u00e0 la casse et les espaces sont ignor\u00e9s.   Par exemple <code>pyxel.sounds[0].set_volumes(\"7777 7531\")</code></p> </li> <li> <p><code>set_effects(effects)</code>   Met les effets avec une cha\u00eene de 'NSVF'. Insensible \u00e0 la casse et les espaces sont ignor\u00e9s.   Par exemple <code>pyxel.sounds[0].set_effects(\"NFNF NVVS\")</code></p> </li> </ul>"},{"location":"documentation_nuit_du_code/#classe-music","title":"Classe Music","text":"<ul> <li> <p><code>seqs</code>   Liste bidimensionnelle de sons (0-63) avec le nombre de canaux</p> </li> <li> <p><code>set(seq0, seq1, seq2, ...)</code>   R\u00e9gler les listes de sons (0-63) des canaux. Si une liste vide est pass\u00e9e, ce canal n\u2019est pas utilis\u00e9.   Par exemple <code>pyxel.musics[0].set([0, 1], [], [3])</code></p> </li> </ul>"},{"location":"flottants/","title":"Chapitre 8 : Flottants","text":""},{"location":"flottants/#partie-a-rappels-sur-lecriture-scientifique-des-nombres-decimaux","title":"Partie A - Rappels sur l'\u00e9criture scientifique des nombres d\u00e9cimaux","text":"<p>L'\u00e9criture scientifique d'un nombre d\u00e9cimal est compos\u00e9e de trois parties :</p> <ul> <li>un signe, qui peut \u00eatre plus ou moins,</li> <li>une mantisse, qui un nombre d\u00e9cimal compris entre \\(1\\) (inclus) et \\(10\\) (exclu),</li> <li>un exposant, qui est un nombre entier positif ou n\u00e9gatif.</li> </ul> <p>Par exemple, l'\u00e9criture scientifique du nombre \\(2030\\) est : \\(+ 2,03 \\times 10^3\\).</p> <p>Le signe est plus, la mantisse est \\(2,03\\) et l'exposant est \\(3\\).</p> <p>En Python, une fa\u00e7on d'afficher l'\u00e9criture scientifique d'un nombre <code>n</code> est d'utiliser la commande suivante :</p> <pre><code>print(\"{:e}\".format(n))\n</code></pre> <p>La mantisse s'affiche par d\u00e9faut avec six chiffres apr\u00e8s la virgule, mais il est possible d'en afficher davantage ou moins :</p> <pre><code>print(\"{:.2e}\".format(n))  # 2 chiffres apr\u00e8s la virgule pour la mantisse\nprint(\"{:.10e}\".format(n))  # 10 chiffres apr\u00e8s la virgule pour la mantisse\n</code></pre> <p>\\(0\\) n'a pas d'\u00e9criture scientifique</p> <p>On remarque qu'un nombre ne peut pas \u00eatre \u00e9crit dans ce format : le nombre \\(0\\). En effet, la mantisse devrait \u00eatre \u00e9gale \u00e0 \\(0\\), ce qui est exclu par d\u00e9finition.</p> Exercice 8-01 : \u00c9criture scientifique d\u00e9cimale <p>Objectif : D\u00e9terminer l'\u00e9criture scientifique d\u00e9cimale de nombres, \u00e0 la main et avec Python.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"flottants/#partie-b-ecriture-binaire-des-nombres","title":"Partie B - \u00c9criture binaire des nombres","text":""},{"location":"flottants/#rappel-concernant-les-nombres-entiers-positifs","title":"Rappel concernant les nombres entiers positifs","text":"<p>Donner l'\u00e9criture binaire d'un nombre entier positif, cela revient \u00e0 \u00e9crire ce nombre sous la forme d'une somme de puissances positives de \\(2\\).</p> <p>Par exemple, pour le nombre \\(2030\\) :</p> <p>\\(2030 = 1024 + 512 + 256 + 128 + 64 + 32 + 8 + 4 + 2\\) c'est-\u00e0-dire :</p> <p>\\(2030 = 2^{10} + 2^9 + 2^8 + 2^7 + 2^6 + 2^5 + 2^3 + 2^2 + 2^1\\) et l'\u00e9criture binaire de \\(2030\\) est donc :</p> <p>\\(2030 = (11111101110)_2\\).</p> <p>On peut v\u00e9rifier le r\u00e9sultat obtenu gr\u00e2ce \u00e0 la fonction <code>bin</code>, qui renvoie l'\u00e9criture binaire sous la forme d'une cha\u00eene de caract\u00e8res qui commence par <code>0b</code> :</p> <pre><code>print(bin(2030))  # affiche \"0b11111101110\"\n</code></pre> Exercice 8-02 : \u00c9criture binaire de nombres entiers positifs <p>Objectif : D\u00e9terminer l'\u00e9criture binaire de nombres entiers positifs, \u00e0 la main et avec Python.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"flottants/#ecriture-binaire-des-nombres-compris-entre-0-et-1","title":"\u00c9criture binaire des nombres compris entre 0 et 1","text":"<p>Le principe est le m\u00eame pour obtenir l'\u00e9criture binaire des nombres \u00e0 virgule. On s'autorise simplement d'utiliser aussi des puissances n\u00e9gatives de \\(2\\).</p> <p>Par exemple, pour le nombre \\(0,6875\\) : </p> <p>\\(0,6875 = 0,5 + 0,125 + 0,0625\\) c'est-\u00e0-dire :</p> <p>\\(0,6875 = 2^{-1} + 2^{-3} + 2^{-4}\\) et l'\u00e9criture binaire de \\(0,6875\\) est donc :</p> <p>\\(0,6875 = (0,1011)_2\\).</p> Exercice 8-03 : \u00c9criture binaire de nombres \u00e0 virgule <p>Objectif : D\u00e9terminer \u00e0 la main l'\u00e9criture binaire de nombres non entiers.</p> <p>\u00c9nonc\u00e9</p> <p>Donner l'\u00e9criture binaire des nombres \\(0,3125\\) et \\(0,515625\\).</p> <p>Remarquons que les nombres r\u00e9els qui ont une \u00e9criture d\u00e9cimale infinie ont aussi une \u00e9criture binaire infinie. Par exemple : </p> <p>\\(1/3 = 0,33333333... = (0,01010101...)_2\\).</p> <p>Il existe par contre des nombres r\u00e9els qui ont une \u00e9criture d\u00e9cimale finie mais qui ont une \u00e9criture binaire infinie. Par exemple : </p> <p>\\(1/5 = 0,2 = (0,00110011...)_2\\).</p> Exercice 8-04 : \u00c9criture binaire infinie <p>Objectif : D\u00e9terminer \u00e0 la main l'\u00e9criture binaire infinie d'un nombre.</p> <p>\u00c9nonc\u00e9</p> <p>Donner les 10 premiers bits apr\u00e8s la virgule de l'\u00e9criture binaire des nombres \\(0,1\\) et \\(0,3\\).</p>"},{"location":"flottants/#partie-c-representation-des-flottants-en-machine-norme-ieee-754","title":"Partie C - Repr\u00e9sentation des flottants en machine (norme IEEE 754)","text":"<p>La norme informatique la plus couramment utilis\u00e9e pour repr\u00e9senter les nombres flottants est la norme IEEE 754 mise au point en 1985. Il s'agit d'une variante de l'\u00e9criture scientifique en base 2, dans laquelle la mantisse est un nombre compris entre \\(1\\) (inclus) et \\(2\\) (exclu).</p> <p>Les flottants peuvent \u00eatre repr\u00e9sent\u00e9s sur 32 bits (format dit de simple pr\u00e9cision) ou sur 64 bits (format dit de double pr\u00e9cision).</p> Format Signe <code>s</code> Exposant <code>e</code> Mantisse <code>m</code> Total simple pr\u00e9cision 1 bit 8 bits 23 bits 32 bits double pr\u00e9cision 1 bit 11 bits 52 bits 64 bits"},{"location":"flottants/#principe-de-la-representation","title":"Principe de la repr\u00e9sentation","text":"<p>Le bit le plus \u00e0 gauche (bit de poids fort) correspond au signe du flottant :</p> <ul> <li><code>0</code> pour un flottant positif,</li> <li><code>1</code> pour un flottant n\u00e9gatif.</li> </ul> <p>Les 8 ou 11 bits suivants correspondent \u00e0 l'exposant <code>e</code>. Comme <code>e</code> peut \u00eatre positif ou n\u00e9gatif, on ne repr\u00e9sente pas directement l'entier <code>e</code> mais :</p> <ul> <li>l'entier <code>e + 127</code> sur 8 bits pour le format simple pr\u00e9cision,</li> <li>l'entier <code>e + 1023</code> sur 11 bits pour le format double pr\u00e9cision.</li> </ul> <p>Les 23 ou 52 derniers bits correspondent \u00e0 la mantisse <code>m</code>. Comme <code>m</code> est par d\u00e9finition compris entre \\(1\\) et \\(2\\), c'est uniquement la partie fractionnaire (partie situ\u00e9e apr\u00e8s la virgule) du nombre <code>m - 1</code> qui est repr\u00e9sent\u00e9e sur 23 ou 52 bits.</p>"},{"location":"flottants/#exemple","title":"Exemple","text":"<p>Repr\u00e9sentons par exemple sur 32 bits le nombre flottant <code>-0,2</code>. Il est n\u00e9gatif donc le bit le plus \u00e0 gauche de sa repr\u00e9sentation est un <code>1</code>.</p> <p>De plus, nous avons vu pr\u00e9c\u00e9demment que \\(0,2 = (0,00110011...)_2 = (1,10011001...)_2 \\times 2^{-3}\\). L'exposant <code>e</code> est donc \\(-3\\) et la mantisse <code>m</code> est $1,10011001 ... $.</p> <p>On \u00e9crit sur 8 bits le nombre <code>e + 127</code> (c'est-\u00e0-dire 124) ce qui donne <code>01111100</code>.</p> <p>Enfin, on \u00e9crit sur 23 bits la partie fractionnaire de <code>m-1</code> (c'est-\u00e0-dire \\(0,10011001...\\)) ce qui donne <code>10011001100110011001100(1)</code>, arrondi \u00e0 <code>10011001100110011001101</code>.</p> <p>La repr\u00e9sentation sur 32 bits obtenue pour le flottant <code>-0,2</code> est donc <code>1 01111100 10011001100110011001101</code>.</p> <p>Repr\u00e9sentation du nombre \\(0\\)</p> <p>Nous avons dit que le nombre \\(0\\) n'a pas d'\u00e9criture scientifique. Il est par convention repr\u00e9sent\u00e9 par <code>0 00000000 00000000000000000000000</code> sur 32 bits.</p> Exercice 8-05 : Repr\u00e9sentation de flottants sur 32 bits <p>Objectif : D\u00e9terminer \u00e0 la main la repr\u00e9sentation sur 32 bits d'un nombre flottant.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"flottants/#partie-d-probleme-du-test-degalite-de-deux-flottants","title":"Partie D - Probl\u00e8me du test d'\u00e9galit\u00e9 de deux flottants","text":"<p>La repr\u00e9sentation des nombres flottants en machine est approximative lorsque leur \u00e9criture binaire est infinie ou compos\u00e9e de trop de bits apr\u00e8s la virgule.</p> <p>Par exemple, les nombres \\(0,1\\) et \\(0,2\\) ont une \u00e9criture binaire infinie, d'o\u00f9 les probl\u00e8mes d'arrondis qui font que l'expression bool\u00e9enne <code>0.1 + 0.2 == 0.3</code> vaut <code>False</code>.</p> <p>C'est la raison pour laquelle il faut absolument \u00e9viter d'utiliser des conditions dans lesquelles on teste l'\u00e9galit\u00e9 entre deux flottants.</p> <p>Il est fortement recommand\u00e9 de remplacer un test d'\u00e9galit\u00e9 <code>flottant1 == flottant2</code> par un test du type <code>abs(flottant1 - flottant2) &lt; 10**-n</code> qui est un test d'\u00e9galit\u00e9 approch\u00e9e (avec <code>n</code> chiffres apr\u00e8s la virgule de pr\u00e9cision).</p> Exercice 8-06 : Probl\u00e8mes d'arrondis lors du calcul sur les flottants <p>Objectifs :</p> <ul> <li>Constater sur des exemples les probl\u00e8mes provoqu\u00e9s par la repr\u00e9sentation approximative des flottants en machine.</li> <li>Utiliser des tests d'\u00e9galit\u00e9 approch\u00e9e.</li> </ul> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"flottants/#partie-e-exercices","title":"Partie E - Exercices","text":"Exercices 8-07 et 8-08 Exercice 8-07 : Repr\u00e9sentation sur 32 bitsExercice 8-08 : Arrondis sur les flottants <p>\u00c9nonc\u00e9</p> <p>1. Donner la valeur d\u00e9cimale du nombre flottant dont la repr\u00e9sentation sur 32 bits est : <code>1 01111110 11110000000000000000000</code>.</p> <p>2. M\u00eame question pour le nombre flottant dont la repr\u00e9sentation sur 32 bits est : <code>0 10000011 11100000000000000000000</code>.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"flottants/#ce-quil-faut-savoir-et-savoir-faire","title":"Ce qu'il faut savoir et savoir faire","text":"<ul> <li>Donner l'\u00e9criture scientifique d\u00e9cimale d'un nombre.</li> <li>Afficher l'\u00e9criture scientifique d\u00e9cimale d'un nombre <code>n</code> avec la commande <code>print(\"{:e}\".format(n))</code></li> <li>D\u00e9terminer l'\u00e9criture binaire d'un entier positif.</li> <li>Afficher l'\u00e9criture binaire d'un entier avec la fonction <code>bin</code>.</li> <li>D\u00e9terminer l'\u00e9criture binaire d'un nombre d\u00e9cimal positif.</li> <li>D\u00e9terminer la repr\u00e9sentation d'un nombre flottant sur 32 bits.</li> <li>Retrouver un flottant \u00e0 partir de sa repr\u00e9sentation sur 32 bits.</li> <li>Ne pas utiliser de test d'\u00e9galit\u00e9 sur les flottants, mais des tests d'\u00e9galit\u00e9 approch\u00e9e.</li> </ul>"},{"location":"fonctions/","title":"Chapitre 3 : Fonctions","text":""},{"location":"fonctions/#partie-a-appel-et-definition-dune-fonction","title":"Partie A - Appel et d\u00e9finition d'une fonction","text":""},{"location":"fonctions/#appel-dune-fonction","title":"Appel d'une fonction","text":"Activit\u00e9 3-01 : D\u00e9partements de la r\u00e9gion \u00cele-de-France <p>Objectif : Comprendre comment faire appel \u00e0 une fonction.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>L'activit\u00e9 introductive nous fait utiliser deux fonctions :</p> <ul> <li>La premi\u00e8re, <code>nom_departement</code>, renvoie le nom d'un d\u00e9partement de la r\u00e9gion \u00cele-de-France \u00e0 partir de son num\u00e9ro.</li> <li>La seconde, <code>prefecture</code>, renvoie le nom du chef lieu d'un d\u00e9partement de la r\u00e9gion \u00cele-de-France \u00e0 partir de son num\u00e9ro.</li> </ul> <p>Les appels <code>nom_departement(94)</code> et <code>prefecture(94)</code> sont des expressions dont la valeur est d\u00e9termin\u00e9e et renvoy\u00e9e par la fonction. Ces expressions peuvent bien entendu \u00eatre affect\u00e9es \u00e0 des variables.</p> <p>La valeur <code>94</code> \u00e9crite entre parenth\u00e8ses apr\u00e8s le nom des deux fonctions s'appelle un argument. En changeant l'argument d'une fonction, son appel peut produire un r\u00e9sultat diff\u00e9rent.</p> <pre><code>numero = 94\nnom = nom_departement(numero)\nville = prefecture(numero)\nprint(\"Le d\u00e9partement\", numero, \"s'appelle\", nom, \"et sa pr\u00e9fecture est\", ville)\n</code></pre> <p>Par exemple, l'ex\u00e9cution du programme ci-dessus entra\u00eene l'affichage de la phrase <code>Le d\u00e9partement 94 s'appelle Val-de-Marne et sa pr\u00e9fecture est Cr\u00e9teil</code>.</p> <pre><code>numero = 93\nnom = nom_departement(numero)\nville = prefecture(numero)\nprint(\"Le d\u00e9partement\", numero, \"s'appelle\", nom, \"et sa pr\u00e9fecture est\", ville)\n</code></pre> <p>Par contre, l'ex\u00e9cution du programme ci-dessus entra\u00eene l'affichage de la phrase <code>Le d\u00e9partement 93 s'appelle Seine Saint Denis et sa pr\u00e9fecture est Bobigny</code>.</p>"},{"location":"fonctions/#definition-dune-fonction","title":"D\u00e9finition d'une fonction","text":"<p>Nous souhaitons maintenant d\u00e9finir une fonction <code>nom_academie</code>, qui renvoie le nom de l'acad\u00e9mie dont fait partie un d\u00e9partement d\u00e9sign\u00e9 par son num\u00e9ro. On rappelle que les trois acad\u00e9mies d'\u00cele-de-France sont compos\u00e9es de la fa\u00e7on suivante :</p> Acad\u00e9mie de Cr\u00e9teil Acad\u00e9mie de Paris Acad\u00e9mie de Versailles 77 - 93 - 94 75 78 - 91 - 92 - 95 <pre><code>def nom_academie(num):\n    if num == 75:\n        ac = \"Acad\u00e9mie de Paris\"\n    elif num == 77 or num == 93 or num == 94:\n        ac = \"Acad\u00e9mie de Cr\u00e9teil\"\n    else:\n        ac = \"Acad\u00e9mie de Versailles\"\n    return ac\n</code></pre> <p>Lors qu'on d\u00e9finit une fonction, la premi\u00e8re ligne commence toujours par le mot cl\u00e9 <code>def</code>, suivi du nom de la fonction, et se termine par un couple de parenth\u00e8ses suivi de deux points.</p> <p>\u00c0 l'int\u00e9rieur des parenth\u00e8ses, on fait appara\u00eetre le ou les \u00e9ventuel(s) param\u00e8tre(s) d'entr\u00e9e de la fonction. Il s'agit de variables locales, qui n'existent dans la m\u00e9moire que pendant l'ex\u00e9cution de la fonction, et qui ont pour valeur un argument fix\u00e9 au moment de l'appel de la fonction. Par exemple, pour la fonction <code>nom_academie</code>, il y a un seul param\u00e8tre d'entr\u00e9e <code>num</code>, qui correspond \u00e0 un num\u00e9ro de d\u00e9partement.</p> <p>Sous la premi\u00e8re ligne figure la s\u00e9quence d'instructions qui est ex\u00e9cut\u00e9e lors de l'appel de la fonction. Cette s\u00e9quence s'ex\u00e9cute soit jusqu'\u00e0 la fin, soit jusqu'\u00e0 l'instruction <code>return variable_ou_expression</code> (qui stoppe toujours l'ex\u00e9cution de la fonction dans laquelle elle se trouve). C'est cette instruction qui permet de renvoyer une valeur, appel\u00e9e param\u00e8tre de sortie, qui est conserv\u00e9e dans la m\u00e9moire pour la suite de l'ex\u00e9cution du programme. Par exemple, pour la fonction <code>nom_academie</code>, il y a un param\u00e8tre de sortie <code>ac</code>, qui correspond au nom de l'acad\u00e9mie dans laquelle se trouve le d\u00e9partement num\u00e9ro <code>num</code>.</p> <p>Attention \u00e0 ne pas confondre d\u00e9finition et appel de fonction</p> <p>Lorsqu'on se contente d'\u00e9crire la d\u00e9finition d'une fonction, aucune ex\u00e9cution de la fonction n'est r\u00e9alis\u00e9e. C'est seulement lors d'un appel \u00e0 la fonction que les instructions correspondantes sont ex\u00e9cut\u00e9es.</p> Exercice 3-02 : D\u00e9finition de fonctions simples <p>Objectif : D\u00e9finir et tester des fonctions simples tout en retravaillant les instructions conditionnelles et les boucles.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> Activit\u00e9 3-03 : Retour sur la suite de Syracuse <p>Objectif : Poursuivre l'\u00e9tude de la suite de Syracuse, vue au chapitre pr\u00e9c\u00e9dent, dans le but d'\u00e9crire et de tester des fonctions.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"fonctions/#cas-particulier-des-procedures","title":"Cas particulier des proc\u00e9dures","text":"<p>Une proc\u00e9dure est une fonction qui ne renvoie aucune valeur, et ne poss\u00e8de donc pas de param\u00e8tre de sortie. Elle peut, en revanche, poss\u00e9der un ou plusieurs param\u00e8tres d'entr\u00e9e.</p> Exercice 3-04 : Jeu du retournement <p>Objectif : Identifier dans un programme quelles sont les fonctions et quelles sont les proc\u00e9dures.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p>"},{"location":"fonctions/#partie-b-specification-dune-fonction","title":"Partie B - Sp\u00e9cification d'une fonction","text":"<p>La sp\u00e9cification d'une fonction permet de conna\u00eetre son r\u00f4le et ses \u00e9ventuels param\u00e8tres d'entr\u00e9e, param\u00e8tre de sortie et effets de bord.</p> <p>Cela permet de savoir \u00e0 quoi sert une fonction, comment l'utiliser (quelles entr\u00e9es ? quelle sortie ?) et quels sont ses effets secondaires \u00e9ventuels sur la machine (par exemple la modification d'une variable globale en m\u00e9moire, un affichage \u00e0 l'\u00e9cran, l'\u00e9criture dans un fichier, ...).</p> <p>Consid\u00e9rons par exemple la fonction suivante, et donnons sa sp\u00e9cification :</p> <pre><code>def aire_triangle(a, b, c):\n    if a == b and b == c:  # Les trois c\u00f4t\u00e9s sont de m\u00eame longueur\n        print(\"Triangle \u00e9quilat\u00e9ral !\")\n    elif a == b or b == c or c == a:  # Deux des trois c\u00f4t\u00e9s sont de m\u00eame longueur\n        print(\"Triangle isoc\u00e8le !\")\n    demi_perimetre = (a + b + c) / 2\n    aire = (demi_perimetre * (demi_perimetre - a) * (demi_perimetre - b) * (demi_perimetre - c)) ** 0.5\n    return aire\n</code></pre> <ul> <li>R\u00f4le de la fonction : Affiche \u00e0 l'\u00e9cran si le triangle est \u00e9quilat\u00e9ral ou isoc\u00e8le, et renvoie son aire.</li> <li>Param\u00e8tres d'entr\u00e9e : <code>a</code>, <code>b</code>, <code>c</code> (nombres), les longueurs des trois c\u00f4t\u00e9s du triangle.</li> <li>Param\u00e8tre de sortie : <code>aire</code> (nombre), l'aire du triangle (calcul\u00e9e gr\u00e2ce \u00e0 la formule de H\u00e9ron).</li> <li>Effets de bord : Affichage \u00e0 l'\u00e9cran dans le cas o\u00f9 le triangle est \u00e9quilat\u00e9ral ou isoc\u00e8le.</li> </ul> <p>La sp\u00e9cification d'une fonction s'\u00e9crit en Python dans une zone (appel\u00e9e docstring) d\u00e9limit\u00e9e par trois guillemets doubles <code>\"\"\"</code> et situ\u00e9e juste au dessous de la ligne commen\u00e7ant par <code>def</code>.</p> <p>On fait appara\u00eetre successivement le r\u00f4le de la fonction, puis ses param\u00e8tres d'entr\u00e9e, son param\u00e8tre de sortie et ses effets de bord s'il y en a.</p> <pre><code>def aire_triangle(a, b, c):\n\"\"\"\n    Affiche \u00e0 l'\u00e9cran si le triangle est \u00e9quilat\u00e9ral ou isoc\u00e8le, et renvoie son aire.\n    - Entr\u00e9es : a, b, c (nombres)\n    - Sortie : aire (nombre)\n    Effet de bord : affichage \u00e9ventuel \u00e0 l'\u00e9cran\n    \"\"\"\n    if a == b and b == c:  # Les trois c\u00f4t\u00e9s sont de m\u00eame longueur\n        print(\"Triangle \u00e9quilat\u00e9ral !\")\n    elif a == b or b == c or c == a:  # Deux des trois c\u00f4t\u00e9s sont de m\u00eame longueur\n        print(\"Triangle isoc\u00e8le !\")\n    demi_perimetre = (a + b + c) / 2\n    aire = (demi_perimetre * (demi_perimetre - a) * (demi_perimetre - b) * (demi_perimetre - c)) ** 0.5\n    return aire\n</code></pre> <p>Attention aux sp\u00e9cifications</p> <p>Toutes les fonctions et proc\u00e9dures que vous d\u00e9finirez devront d\u00e9sormais avoir leur sp\u00e9cification. Cela permettra de rendre votre code plus clair, en explicitant le r\u00f4le de chaque fonction ou proc\u00e9dure et les param\u00e8tres qu'elle utilise, mais aussi plus facile \u00e0 corriger dans le cas o\u00f9 il contiendrait des erreurs.</p> <p>La fonction <code>help</code> permet d'acc\u00e9der \u00e0 la docstring de la fonction dont le nom est pass\u00e9 en param\u00e8tre d'entr\u00e9e.</p> Exercice 3-05 : Proc\u00e9dure <code>etoile</code> <p>Objectif : \u00c9crire la sp\u00e9cification d'une proc\u00e9dure apr\u00e8s l'avoir test\u00e9e.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"fonctions/#partie-c-assertions","title":"Partie C - Assertions","text":"<p>Lors d'un appel de fonction, il faut souvent s'assurer que les arguments pass\u00e9s en param\u00e8tre d'entr\u00e9e sont acceptables, tant au niveau de leur type que de leur valeur. On utilise pour cela des assertions.</p> <p>On peut par exemple remarquer que la proc\u00e9dure <code>etoile</code> d\u00e9finie pr\u00e9c\u00e9demment ne fonctionne correctement que si son param\u00e8tre d'entr\u00e9e <code>nb_branches</code> est un entier impair.</p> <p>En Python, il existe deux fa\u00e7ons de mettre en place une assertion :</p> <ul> <li>avec le mot-cl\u00e9 <code>assert</code>, \u00e0 privil\u00e9gier pour le d\u00e9bogage des fonctions que vous serez le seul ou la seule \u00e0 utiliser.</li> <li>avec le mot-cl\u00e9 <code>raise</code>, \u00e0 privil\u00e9gier dans le cas o\u00f9 les fonctions seraient mises \u00e0 la disposition d'autres que vous.</li> </ul>"},{"location":"fonctions/#assertions-avec-le-mot-cle-assert","title":"Assertions avec le mot-cl\u00e9 <code>assert</code>","text":"<p>La syntaxe est la suivante : <code>assert condition, message_d_erreur</code>.</p> <p>Si la <code>condition</code> est fausse, l'ex\u00e9cution de la fonction s'interrompt et le <code>message_d_erreur</code> s'affiche.</p> <p>Pour v\u00e9rifier que <code>nb_branches</code> est un entier, la condition s'\u00e9crit <code>type(nb_branches) == int</code>. C'est une v\u00e9rification de type.</p> <p>Pour v\u00e9rifier que <code>nb_branches</code> est impair, la condition s'\u00e9crit <code>nb_branches % 2 != 0</code>. C'est une v\u00e9rification de valeur.</p> <pre><code>def etoile(nb_branches, longueur):\n    assert type(nb_branches) == int, \"le premier argument doit \u00eatre un entier\"\n    assert nb_branches % 2 != 0, \"le premier argument doit \u00eatre impair\"\n    clear()\n    angle = 180 * (1 - 1 / nb_branches)\n    for n in range(nb_branches):\n        forward(longueur)\n        left(angle)\n</code></pre> <p>L'appel <code>etoile(\"bonjour\", 300)</code> entra\u00eene l'erreur suivante :</p> <pre><code>AssertionError: le premier argument doit \u00eatre un entier\n</code></pre> <p>L'appel <code>etoile(6, 300)</code> entra\u00eene l'erreur suivante :</p> <pre><code>AssertionError: le premier argument doit \u00eatre impair\n</code></pre> <p>Utilisation de la fonction <code>type</code></p> <p>La fonction <code>type</code> renvoie le type de la variable ou de l'expression qui lui est pass\u00e9e en param\u00e8tre. Les principaux types que nous utiliserons cette ann\u00e9e sont list\u00e9s dans le tableau suivant :</p> Notation Python Type Exemples <code>int</code> Nombre entier <code>0</code> <code>-1023</code> <code>7*9+2</code> <code>10**9</code> <code>int(3.1)</code> <code>float</code> Nombre flottant <code>0.0</code> <code>-10.23</code> <code>6/3</code> <code>10**-9</code> <code>float(3)</code> <code>bool</code> Bool\u00e9en <code>True</code> <code>False</code> <code>True or False</code> <code>2 &lt;= 0</code> <code>bool(1)</code> <code>function</code> Fonction ou proc\u00e9dure <code>print</code> <code>input</code> <code>nom_departement</code> <code>aire_triangle</code> <code>etoile</code> <code>str</code> Cha\u00eene de caract\u00e8res voir chap. 4 <code>list</code> Tableau voir chap. 5 <code>tuple</code> p-uplet voir chap. 6 <code>dict</code> Dictionnaire voir chap. 6 Exercice 3-06 : Assertions avec <code>assert</code> <p>Objectif : \u00c9crire des assertions avec le mot-cl\u00e9 <code>assert</code>.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"fonctions/#assertions-avec-le-mot-cle-raise","title":"Assertions avec le mot-cl\u00e9 <code>raise</code>","text":"<p>Le mot-cl\u00e9 <code>raise</code> s'utilise \u00e0 l'int\u00e9rieur d'une instruction conditionnelle.</p> <p>La syntaxe est la suivante : <code>raise Exception(message_d_erreur)</code>.</p> <p>Si la commande est ex\u00e9cut\u00e9e, la fonction s'interrompt et le <code>message_d_erreur</code> s'affiche.</p> <p>Le mot-cl\u00e9 <code>Exception</code> peut, par exemple, \u00eatre remplac\u00e9 :</p> <ul> <li>par <code>TypeError</code> dans le cas d'une erreur de type.</li> <li>par <code>ValueError</code> dans le cas d'une erreur de valeur.</li> </ul> <pre><code>def etoile(nb_branches, longueur):\n    if type(nb_branches) != int:\n        raise TypeError(\"le premier argument doit \u00eatre un entier\")\n    if nb_branches % 2 == 0:\n        raise ValueError(\"le premier argument doit \u00eatre impair\")\n    clear()\n    angle = 180 * (1 - 1 / nb_branches)\n    for n in range(nb_branches):\n        forward(longueur)\n        left(angle)\n</code></pre> <p>L'appel <code>etoile(\"bonjour\", 300)</code> entra\u00eene l'erreur suivante :</p> <pre><code>TypeError: le premier argument doit \u00eatre un entier\n</code></pre> <p>L'appel <code>etoile(6, 300)</code> entra\u00eene l'erreur suivante :</p> <pre><code>ValueError: le premier argument doit \u00eatre impair\n</code></pre> Exercice 3-07 : Assertions avec <code>raise</code> <p>Objectif : \u00c9crire des assertions avec le mot-cl\u00e9 <code>raise</code>.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"fonctions/#partie-d-exercices-et-activites","title":"Partie D - Exercices et activit\u00e9s","text":"Exercices 3-08 \u00e0 3-10 Exercice 3-08 : Th\u00e9or\u00e8me de PythagoreExercice 3-09 : Suite d'entiersExercice 3-10 : Nombre de jours <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> Activit\u00e9s 3-11 et 3-12 Activit\u00e9 3-11 : Triangles et carr\u00e9sActivit\u00e9 3-12 : Carte de vigilance m\u00e9t\u00e9orologique <p>Objectif : D\u00e9finir des proc\u00e9dures pour r\u00e9aliser des dessins g\u00e9om\u00e9triques.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Objectif : Utiliser des fonctions et proc\u00e9dures pour repr\u00e9senter des donn\u00e9es sur une carte.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"fonctions/#ce-quil-faut-savoir-et-savoir-faire","title":"Ce qu'il faut savoir et savoir faire","text":"<ul> <li>Appeler une fonction.</li> <li>D\u00e9finir une fonction, avec param\u00e8tres d'entr\u00e9e \u00e9ventuels et param\u00e8tre de sortie.</li> <li>Tester une fonction, et v\u00e9rifier que le r\u00e9sultat obtenu est coh\u00e9rent.</li> <li>Faire la diff\u00e9rence entre variable globale et variable locale associ\u00e9e \u00e0 une fonction.</li> <li>Faire la diff\u00e9rence entre une fonction et une proc\u00e9dure.</li> <li>\u00c9crire ou comprendre la sp\u00e9cification d'une fonction.</li> <li>\u00c9crire une assertion avec le mot-cl\u00e9 <code>assert</code>.</li> <li>\u00c9crire une assertion avec le mot-cl\u00e9 <code>raise</code>.</li> <li>Utiliser la fonction <code>type</code>.</li> <li>Utiliser la fonction <code>help</code> pour obtenir la sp\u00e9cification d'une fonction.</li> <li>Utiliser quelques proc\u00e9dures du module <code>Turtle</code>, dont <code>forward</code>, <code>left</code>, <code>right</code>, <code>goto</code>, <code>up</code> et <code>down</code>.</li> </ul>"},{"location":"tableaux/","title":"Chapitre 5 : Tableaux","text":""},{"location":"tableaux/#partie-a-notion-de-tableau","title":"Partie A - Notion de tableau","text":""},{"location":"tableaux/#definition-dun-tableau-en-extension","title":"D\u00e9finition d'un tableau en extension","text":"<p>Un tableau permet de stocker en m\u00e9moire plusieurs valeurs dans une seule variable.</p> <p>Une fa\u00e7on de d\u00e9finir un tableau est d'indiquer entre crochets les diff\u00e9rentes valeurs, s\u00e9par\u00e9es par des virgules. On parle alors de d\u00e9finition en extension.</p> <p>Par exemple, le tableau <code>jours</code> d\u00e9fini ci-dessous contient sept cha\u00eenes de caract\u00e8res :</p> <pre><code>jours = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\", \"dimanche\"]\n</code></pre>"},{"location":"tableaux/#acces-aux-valeurs-grace-a-leur-indice","title":"Acc\u00e8s aux valeurs gr\u00e2ce \u00e0 leur indice","text":"<p>Chaque valeur contenue dans un tableau est index\u00e9e par un entier sup\u00e9rieur ou \u00e9gal \u00e0 <code>0</code>. Dans la m\u00e9moire de la machine, les valeurs sont stock\u00e9es cons\u00e9cutivement. Pour acc\u00e9der \u00e0 la valeur d'indice <code>n</code> d'un tableau <code>tab</code>, on utilise la notation <code>tab[n]</code>.</p>"},{"location":"tableaux/#modification-des-valeurs-grace-a-leur-indice","title":"Modification des valeurs gr\u00e2ce \u00e0 leur indice","text":"<p>Pour modifier la valeur d'indice <code>n</code> contenue dans le tableau <code>tab</code>, il suffit d'utiliser une affectation du type <code>tab[n] = nouvelle_valeur</code>.</p> <p>Mais si on tente d'acc\u00e9der ou de modifier, dans un tableau, une valeur situ\u00e9e \u00e0 un indice qui n'existe pas, alors une erreur se produit.</p> <p>Par exemple, pour le tableau <code>jours</code> d\u00e9fini pr\u00e9c\u00e9demment, les sept valeurs ont des indices compris entre <code>0</code> et <code>6</code>. Si on essaie d'acc\u00e9der \u00e0 la valeur d'indice <code>7</code>, une erreur se produit.</p> <pre><code>IndexError: list index out of range\n</code></pre> Exercice 5-01 : Tableaux d\u00e9finis en extension <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"tableaux/#definition-dun-tableau-en-comprehension","title":"D\u00e9finition d'un tableau en compr\u00e9hension","text":"<p>Si on souhaite stocker dans un tableau les carr\u00e9s des entiers compris entre 0 et 10, on peut d\u00e9finir le tableau en extension :</p> <pre><code>tab = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n</code></pre> <p>On constate qu'une telle d\u00e9finition n'est pas pratique, voire impossible \u00e0 mettre en \u0153uvre si le nombre de valeurs dans le tableau est grand.</p> <p>On utilise alors une autre fa\u00e7on de d\u00e9finir le tableau : la d\u00e9finition en compr\u00e9hension, qui est bas\u00e9e sur la notion de boucle.</p> <pre><code>tab = [k*k for k in range(11)]\n</code></pre> <p>Il faut comprendre qu'on affecte \u00e0 la variable <code>tab</code> un tableau contenant les valeurs de <code>k*k</code> (soit <code>k</code> au carr\u00e9) pour tous les entiers <code>k</code> compris entre <code>0</code> et <code>10</code> (c'est-\u00e0-dire les valeurs enti\u00e8res auxquelles correspondent <code>range(11)</code>).</p> <p>Il est \u00e9galement possible d'ajouter une condition \u00e0 la d\u00e9finition en compr\u00e9hension.</p> <p>Par exemple, pour obtenir le carr\u00e9 des nombres pairs compris entre 0 et 10, on \u00e9crit :</p> <pre><code>tab = [k*k for k in range(11) if k % 2 == 0]\n</code></pre> <p>Pour d\u00e9finir, par exemple, un tableau qui contient 100 fois la valeur 0, on peut \u00e9crire :</p> <pre><code>tab = [0 for _ in range(100)]\n</code></pre> <p>ou alors, de fa\u00e7on encore plus simple, utiliser l'op\u00e9rateur <code>*</code> :</p> <pre><code>tab = [0] * 100\n</code></pre> <p>Enfin, l'op\u00e9rateur <code>+</code> permet de concat\u00e9ner (c'est-\u00e0-dire mettre bout \u00e0 bout) plusieurs tableaux. Par exemple, le tableau :</p> <pre><code>tab = [0]*5 + [1]*3 + [5*k for k in range(10) if k % 3 != 0]\n</code></pre> <p>est le tableau d\u00e9fini en compr\u00e9hension qui correspond au tableau d\u00e9fini en extension :</p> <pre><code>tab = [0, 0, 0, 0, 0, 1, 1, 1, 5, 10, 20, 25, 35, 40]\n</code></pre> Exercice 5-02 : Tableaux d\u00e9finis en compr\u00e9hension <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Remarquons enfin qu'en th\u00e9orie la taille d'un tableau est fix\u00e9e et ne peut pas \u00eatre modifi\u00e9e. En Python, les tableaux sont en r\u00e9alit\u00e9 des tableaux dynamiques pour lesquels il est possible d'ajouter ou de retirer des \u00e9l\u00e9ments. Nous verrons en Terminale que ce comportement est celui des listes et non des tableaux.</p> <ul> <li>Pour ajouter un \u00e9l\u00e9ment \u00e0 la fin de <code>tab</code>, on utilise l'instruction <code>tab.append(element)</code>.</li> <li>Pour ajouter un \u00e9l\u00e9ment \u00e0 l'indice <code>n</code> dans <code>tab</code>, on utilise l'instruction <code>tab.insert(n, element)</code>.</li> <li>Pour supprimer l'\u00e9l\u00e9ment d'indice <code>n</code> dans <code>tab</code>, on utilise l'instruction <code>del tab[n]</code>.</li> </ul>"},{"location":"tableaux/#partie-b-tri-dun-tableau-algorithmes-de-tri-par-selection-et-de-tri-par-insertion","title":"Partie B - Tri d'un tableau : algorithmes de tri par s\u00e9lection et de tri par insertion","text":""},{"location":"tableaux/#objectif","title":"Objectif","text":"<p>Le but de cette partie est d'\u00e9tudier deux algorithmes permettant de trier les \u00e9lements d'un tableau du plus petit au plus grand. Les \u00e9l\u00e9ments peuvent \u00eatre des nombres mais aussi, par exemple, des cha\u00eenes de caract\u00e8res (ou tout autre objet dont le type poss\u00e8de un ordre total, c'est-\u00e0-dire un ordre pour lequel tout \u00e9l\u00e9ment peut \u00eatre compar\u00e9 \u00e0 tout autre \u00e9l\u00e9ment).</p>"},{"location":"tableaux/#tri-par-selection","title":"Tri par s\u00e9lection","text":"<p>Le principe du tri par s\u00e9lection est le suivant :</p> <ul> <li>On parcourt le tableau de la gauche vers la droite, en d\u00e9finissant une partie gauche d\u00e9j\u00e0 tri\u00e9e et une partie droite pas encore tri\u00e9e.</li> <li>On d\u00e9termine quel est le plus petit \u00e9l\u00e9ment de la partie de droite, et on l'\u00e9change avec le premier \u00e9l\u00e9ment de la partie de droite.</li> </ul> <p>De cette fa\u00e7on, la partie de gauche du tableau est tri\u00e9e en permanence, et les \u00e9l\u00e9ments y sont plac\u00e9s \u00e0 leur position d\u00e9finitive.</p> <p>En vert, la partie gauche du tableau est tri\u00e9e. En rouge, la partie droite a tous ses \u00e9l\u00e9ments plus grands que les \u00e9l\u00e9ments de la partie gauche.</p> <p>Algorithme de tri par s\u00e9lection</p> <p>D\u00e9but</p> <p><code>n</code> \u2190 longueur du tableau <code>tab</code></p> <p>Pour <code>k</code> allant de 0 \u00e0 (<code>n</code>-2) faire</p> <p><code>i</code> \u2190 indice du plus petit \u00e9lement de <code>tab</code> dont l'indice est compris entre <code>k</code> et (<code>n</code>-1)</p> <p>Echanger le <code>k</code>\u00e8me \u00e9lement et le <code>i</code>\u00e8me \u00e9lement du tableau <code>tab</code></p> <p>Fin Pour</p> <p>Fin</p> Activit\u00e9 5-03 : Tri par s\u00e9lection <p>Objectif : Comprendre et impl\u00e9menter l'algorithme de tri par s\u00e9lection.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"tableaux/#tri-par-insertion","title":"Tri par insertion","text":"<p>Le principe du tri par insertion est le suivant :</p> <ul> <li>On parcourt le tableau de la gauche vers la droite, en d\u00e9finissant une partie gauche d\u00e9j\u00e0 tri\u00e9e et une partie droite pas encore tri\u00e9e.</li> <li>On d\u00e9place le premier \u00e9l\u00e9ment de la partie de droite au bon endroit dans la partie de gauche.</li> </ul> <p>De cette fa\u00e7on, la partie de gauche du tableau est tri\u00e9e en permanence mais les \u00e9l\u00e9ments n'y sont pas plac\u00e9s \u00e0 leur position d\u00e9finitive.</p> <p>En vert, la partie gauche du tableau est tri\u00e9e. En rouge, le premier \u00e9l\u00e9ment de la partie droite doit \u00eatre ins\u00e9r\u00e9 au bon endroit dans la partie gauche.</p> <p>Algorithme de tri par insertion</p> <p>D\u00e9but</p> <p><code>n</code> \u2190 longueur du tableau <code>tab</code></p> <p>Pour <code>k</code> allant de <code>1</code> \u00e0 (<code>n</code>-1) faire</p> <p><code>valeur</code> \u2190 <code>tab[k]</code></p> <p><code>pos</code> \u2190 <code>k</code></p> <p>Tant que <code>pos</code> &gt; 0 et <code>tab[pos - 1]</code> &gt; <code>valeur</code> faire</p> <p><code>tab[pos]</code> \u2190 <code>tab[pos - 1]</code></p> <p><code>pos</code> \u2190 <code>pos - 1</code></p> <p>Fin Tant que</p> <p><code>tab[pos]</code> \u2190 <code>valeur</code></p> <p>Fin Pour</p> <p>Fin</p> Activit\u00e9 5-04 : Tri par insertion <p>Objectif : Comprendre et impl\u00e9menter l'algorithme de tri par insertion, puis comparer son efficacit\u00e9 avec celle de l'algorithme de tri par s\u00e9lection.</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"tableaux/#partie-c-tableaux-a-plusieurs-dimensions","title":"Partie C - Tableaux \u00e0 plusieurs dimensions","text":"<p>Nous avons vu jusqu'\u00e0 pr\u00e9sent des tableaux contenant des valeurs de type entier ou de type cha\u00eene de caract\u00e8res, mais les valeurs peuvent en r\u00e9alit\u00e9 \u00eatre de n'importe quel type.</p> <p>En particulier, un tableau peut contenir des tableaux. On parle alors de tableau \u00e0 deux dimensions.</p> <p>Par exemple, le tableau <code>union_europeenne</code> d\u00e9fini ci-dessous est un tableau \u00e0 deux dimensions contenant 27 tableaux qui correspondent \u00e0 chaque \u00e9tat-membre de l'UE. On stocke en m\u00e9moire l'\u00e9quivalent d'un tableau compos\u00e9 de 27 lignes et 2 colonnes.</p> <pre><code>union_europeenne = [\n    [\"Allemagne\", \"Berlin\"], [\"Belgique\", \"Bruxelles\"], [\"France\", \"Paris\"],\n    [\"Luxembourg\", \"Luxembourg\"], [\"Italie\", \"Rome\"], [\"Pays-Bas\", \"Amsterdam\"],\n    [\"Danemark\", \"Copenhague\"], [\"Irlande\", \"Dublin\"], [\"Gr\u00e8ce\", \"Ath\u00e8nes\"],\n    [\"Espagne\", \"Madrid\"], [\"Portugal\", \"Lisbonne\"], [\"Autriche\", \"Vienne\"],\n    [\"Finlande\", \"Helsinki\"], [\"Su\u00e8de\", \"Stockholm\"], [\"Chypre\", \"Nicosie\"],\n    [\"Estonie\", \"Tallinn\"], [\"Hongrie\", \"Budapest\"], [\"Lettonie\", \"Riga\"],\n    [\"Lituanie\", \"Vilnius\"], [\"Malte\", \"La Valette\"], [\"Pologne\", \"Varsovie\"],\n    [\"R\u00e9publique Tch\u00e8que\", \"Prague\"], [\"Slovaquie\", \"Bratislava\"], [\"Slov\u00e9nie\", \"Ljubljana\"],\n    [\"Bulgarie\", \"Sofia\"], [\"Roumanie\", \"Bucarest\"], [\"Croatie\", \"Zagreb\"]\n]\n</code></pre> <p>L'\u00e9l\u00e9ment du tableau <code>union_europ\u00e9enne</code> d'indice <code>2</code> est un tableau contenant des cha\u00eenes de caract\u00e8res.</p> <p>Il correspond \u00e0 la troisi\u00e8me ligne de <code>union_europeenne</code>.</p> <p>Dans un tableau \u00e0 deux dimensions, on utilise une double indexation pour acc\u00e9der aux \u00e9l\u00e9ments du tableau. Le premier indice correspond au num\u00e9ro de ligne (ici l'indice du pays dans le tableau <code>union_europeenne</code>) et le second au num\u00e9ro de colonne (ici <code>0</code> pour le nom du pays et <code>1</code> pour sa capitale).</p> <p>Par exemple, l'instruction :</p> <pre><code>print(f\"{union_europeenne[2][1]} est la capitale de {union_europeenne[2][0]}.\")\n</code></pre> <p>affiche \u00e0 l'\u00e9cran la cha\u00eene <code>\"Paris est la capitale de France.\"</code></p> Exercice 5-05 : Tableau \u00e0 deux dimensions <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"tableaux/#partie-d-exercices-et-activites","title":"Partie D - Exercices et activit\u00e9s","text":"Exercices 5-06 et 5-07 Exercice 5-06 : Fonction myst\u00e8reExercice 5-07 : Tables d'addition et de multiplication <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Corrig\u00e9 disponible ici</p> Activit\u00e9s 5-08 et 5-09 Activit\u00e9 5-08 : Fonctions et proc\u00e9dures avec des tableauxActivit\u00e9 5-09 : Cases grises <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Corrig\u00e9 disponible ici</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Corrig\u00e9 disponible ici</p>"},{"location":"tableaux/#ce-quil-faut-savoir-et-savoir-faire","title":"Ce qu'il faut savoir et savoir faire","text":"<ul> <li>D\u00e9finir un tableau en extension.</li> <li>Utiliser la fonction <code>len</code> pour d\u00e9terminer le nombre d'\u00e9l\u00e9ments d'un tableau.</li> <li>Acc\u00e9der \u00e0, ou modifier, une valeur contenue dans un tableau, \u00e0 partir de son indice.</li> <li>\u00c9viter les erreurs en se souvenant que les indices des \u00e9l\u00e9ments d'un <code>tableau</code> sont compris entre <code>0</code> et <code>len(tableau)-1</code>.</li> <li>D\u00e9finir un tableau en compr\u00e9hension.</li> <li>Utiliser les op\u00e9rateurs <code>*</code> et <code>+</code> sur des tableaux.</li> <li>Conna\u00eetre l'algorithme de tri par s\u00e9lection.</li> <li>Conna\u00eetre l'algorithme de tri par insertion.</li> <li>Savoir que l'algorithme de tri par s\u00e9lection a une complexit\u00e9 quadratique dans tous les cas.</li> <li>Savoir que l'algorithme de tri par insertion a une complexit\u00e9 quadratique dans le pire des cas, et une complexit\u00e9 lin\u00e9aire dans le meilleur des cas.</li> <li>Mesurer le temps d'ex\u00e9cution d'une partie de programme gr\u00e2ce \u00e0 la fonction <code>time</code> du module <code>time</code>.</li> <li>D\u00e9finir un tableau \u00e0 deux dimensions.</li> <li>Utiliser la double indexation des \u00e9l\u00e9ments d'un tableau \u00e0 deux dimensions pour acc\u00e9der aux \u00e9lements d'un tel tableau.</li> </ul>"},{"location":"tables/","title":"Chapitre 7 : Tables de donn\u00e9es","text":"<p>Cours et exercices \u00e0 t\u00e9l\u00e9charger ici.</p>"},{"location":"tables/#partie-a-representation-de-donnees-en-tables","title":"Partie A - Repr\u00e9sentation de donn\u00e9es en tables","text":"<p>Une  des  utilisations  principales  de  l\u2019informatique  de  nos  jours  est  le  traitement  de  quantit\u00e9s  importantes  de  donn\u00e9es  dans  des domaines tr\u00e8s vari\u00e9s. Par exemple, un site de commerce en ligne peut avoir \u00e0 g\u00e9rer des bases de donn\u00e9es pour des dizaines de milliers d\u2019articles en vente, de clients, de commandes. Un hopital doit pouvoir acc\u00e9der efficacement \u00e0 tous les d\u00e9tails de traitements de ses patients, etc.</p> <p>Mais si les logiciels de traitement de base de donn\u00e9es sont des programmes hautement sp\u00e9cialis\u00e9s pour effectuer ce genre de t\u00e2ches le plus efficacement possible, il est facile de mettre en \u0153uvre les op\u00e9rations de base dans un langage de programmation comme Python. C'est l'objectif de ce chapitre.</p>"},{"location":"tables/#format-csv","title":"Format CSV","text":"<p>Le format CSV (pour comma separated values, c'est-\u00e0-dire valeurs s\u00e9par\u00e9es par des virgules) est un format de fichier texte tr\u00e8s pratique pour repr\u00e9senter des donn\u00e9es structur\u00e9es. Dans ce format, chaque ligne repr\u00e9sente un enregistrement et chaque colonne repr\u00e9sente un champ de l\u2019enregistrement. Les champs sont s\u00e9par\u00e9s par une virgule, d\u2019o\u00f9 le nom CSV.</p> <p>En pratique, on peut choisir le caract\u00e8re utilis\u00e9 pour  s\u00e9parer  les  diff\u00e9rents  champs  et  on  utilise  parfois, plut\u00f4t qu'une virgule,  un  point-virgule,  une  tabulation, deux  points ou une barre verticale. Nous pouvons enfin remarquer que la premi\u00e8re ligne d\u2019un tel fichier est g\u00e9n\u00e9ralement utilis\u00e9e pour indiquer le nom des diff\u00e9rents champs. Dans ce cas, le premier enregistrement appara\u00eet sur la deuxi\u00e8me ligne du fichier et non sur la premi\u00e8re.</p> Activit\u00e9 7-01 : Pr\u00e9fectures des d\u00e9partements <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"tables/#partie-b-recherche-dans-une-table","title":"Partie B - Recherche dans une table","text":""},{"location":"tables/#partie-c-tri-dune-table","title":"Partie C - Tri d'une table","text":""},{"location":"tables/#partie-d-fusion-de-deux-tables","title":"Partie D - Fusion de deux tables","text":""},{"location":"tables/#partie-e-exercices-et-activites","title":"Partie E - Exercices et activit\u00e9s","text":"Exercices 7-xx \u00e0 7-xx Exercice 7-xx : Populations d\u00e9partementalesExercice 7-xx : \u00c9missions de CO2 <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p> <p>Carnet Jupyter \u00e0 t\u00e9l\u00e9charger ici</p> <p>Carnet Jupyter accessible sur CAPYTALE</p>"},{"location":"tables/#ce-que-vous-devez-savoir","title":"Ce que vous devez savoir","text":"<ul> <li>Importer une table de donn\u00e9es depuis un fichier CSV, et stocker le r\u00e9sultat sous forme de tableau de dictionnaires.</li> <li>Valider les donn\u00e9es, c'est-\u00e0-dire modifier leur type pour les rendre utilisables.</li> <li>Afficher des donn\u00e9es s\u00e9lectionn\u00e9es dans une table.</li> <li>Compter des donn\u00e9es s\u00e9lectionn\u00e9es dans une table.</li> <li>D\u00e9finir une fonction de tri utilisable comme argument de la commande <code>.sort()</code> ou de la fonction <code>sorted</code>.</li> <li>Utiliser l'argument <code>reverse = True</code> pour effectuer un tri dans l'ordre d\u00e9croissant.</li> <li>Choisir entre la commande <code>.sort()</code> et la fonction <code>sorted</code> en fonction du contexte.</li> <li>Fusionner les donn\u00e9es contenues dans deux tables.</li> <li>Exporter les donn\u00e9es dans un fichier CSV.</li> </ul>"}]}